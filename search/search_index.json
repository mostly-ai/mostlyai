{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Synthetic Data SDK \u2728","text":"<p>Documentation | Technical White Paper | Usage Examples | Free Cloud Service</p> <p>The Synthetic Data SDK is a Python toolkit for high-fidelity, privacy-safe Synthetic Data.</p> <ul> <li>LOCAL mode trains and generates synthetic data locally on your own compute resources.</li> <li>CLIENT mode connects to a remote MOSTLY AI platform for training &amp; generating synthetic data there.</li> <li>Generators, that were trained locally, can be easily imported to a platform for further sharing.</li> </ul>"},{"location":"#overview","title":"Overview","text":"<p>The SDK allows you to programmatically create, browse and manage 3 key resources:</p> <ol> <li>Generators - Train a synthetic data generator on your existing tabular or language data assets</li> <li>Synthetic Datasets - Use a generator to create any number of synthetic samples to your needs</li> <li>Connectors - Connect to any data source within your organization, for reading and writing data</li> </ol> Intent Primitive API Reference Train a Generator on tabular or language data <code>g = mostly.train(config)</code> mostly.train Generate any number of synthetic data records <code>sd = mostly.generate(g, config)</code> mostly.generate Live probe the generator on demand <code>df = mostly.probe(g, config)</code> mostly.probe Connect to any data source within your org <code>c = mostly.connect(config)</code> mostly.connect <p>https://github.com/user-attachments/assets/9e233213-a259-455c-b8ed-d1f1548b492f</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Broad Data Support</li> <li>Mixed-type data (categorical, numerical, geospatial, text, etc.)</li> <li>Single-table, multi-table, and time-series</li> <li>Multiple Model Types</li> <li>State-of-the-art performance via TabularARGN</li> <li>DNN-based match making for graph relations</li> <li>Fine-tune Hugging Face hosted language models</li> <li>Efficient LSTM for text synthesis from scratch</li> <li>Advanced Training Options</li> <li>GPU/CPU support</li> <li>Differential Privacy</li> <li>Progress Monitoring</li> <li>Automated Quality Assurance</li> <li>Quality metrics for fidelity and privacy</li> <li>In-depth HTML reports for visual analysis</li> <li>Flexible Sampling</li> <li>Up-sample to any data volumes</li> <li>Conditional simulations based on any columns</li> <li>Re-balance underrepresented segments</li> <li>Context-aware data imputation</li> <li>Statistical fairness controls</li> <li>Rule-adherence via temperature</li> <li>Seamless Integration</li> <li>Connect to external data sources (DBs, cloud storages)</li> <li>Fully permissive open-source license</li> </ul>"},{"location":"#quick-start","title":"Quick Start","text":"<p>Install the SDK via <code>pip</code> (see Installation for further details):</p> <pre><code>pip install -U mostlyai  # or 'mostlyai[local]' for LOCAL mode\n</code></pre> <p>Generate synthetic samples using a pre-trained generator:</p> <pre><code># initialize the SDK\nfrom mostlyai.sdk import MostlyAI\nmostly = MostlyAI()\n\n# import a trained generator\ng = mostly.generators.import_from_file(\n  \"https://github.com/mostly-ai/public-demo-data/raw/dev/census/census-generator.zip\"\n)\n\n# probe for 1000 representative synthetic samples\ndf = mostly.probe(g, size=1000)\ndf\n</code></pre> <p>Generate synthetic samples based on fixed column values:</p> <pre><code># create 10k records of 24y male respondents\ndf = mostly.probe(g, seed=[{\"age\": 24, \"sex\": \"Male\"}] * 10_000)\ndf\n</code></pre> <p>And now train your very own synthetic data generator:</p> <pre><code># load original data\nimport pandas as pd\noriginal_df = pd.read_csv(\n  \"https://github.com/mostly-ai/public-demo-data/raw/dev/titanic/titanic.csv\"\n)\n\n# train a single-table generator, with default configs\ng = mostly.train(\n  name=\"Quick Start Demo - Titanic\",\n  data=original_df,\n)\n\n# display the quality assurance report\ng.reports(display=True)\n\n# generate a representative synthetic dataset, with default configs\nsd = mostly.generate(g)\ndf = sd.data()\n\n# or simply probe for some samples\ndf = mostly.probe(g, size=100)\ndf\n</code></pre>"},{"location":"#performance","title":"Performance","text":"<p>The SDK is being developed with a focus on efficiency, accuracy, and flexibility, with best-in-class performance across all three. Results will ultimately depend on the training data itself (size, structure, and content), on the available compute (CPU vs GPU), as well as on the chosen training configurations (model, epochs, samples, etc.). Thus, a crawl / walk / run approach is recommended \u2014 starting with a subset of samples training for a limited amount of time, to then gradually scale up, to yield optimal results for use case at hand.</p>"},{"location":"#tabular-models","title":"Tabular Models","text":"<p>Tabular models within the SDK are built on TabularARGN (arXiv:2501.12012), which achieves best-in-class synthetic data quality while being 1\u20132 orders of magnitude more efficient than comparable models. This efficiency enables the training and generation of millions of synthetic records within minutes, even on CPU environments.</p> <p></p>"},{"location":"#language-models","title":"Language Models","text":"<p>The default language model is a basic, non-pre-trained LSTM (<code>LSTMFromScratch-3m</code>), particularly effective for textual data with limited scope (short lengths, narrow variety) and sufficient training samples.</p> <p>Alternatively, any pre-trained language model, that is available via the Hugging Face Hub and that supports the AutoModelForCausalLM class, can be selected to be then fine-tuned on the provided training data. These models start out already with a general world knowledge, and then adapt to the training data for generating high-fidelity synthetic samples even in sparse data domains. The final performance will once again largely depend on the chosen model configurations.</p> <p>In either case, a modern GPU is highly recommended when working with language models.</p>"},{"location":"#installation","title":"Installation","text":"<p>Use <code>pip</code> (or better <code>uv pip</code>) to install the official <code>mostlyai</code> package via PyPI. Python 3.10 or higher is required.</p> <p>It is highly recommended to install the package within a dedicated virtual environment using <code>uv</code> (see here):</p> Setup of <code>uv</code> on Unix / macOS <pre><code># Install uv if you don't have it yet\ncurl -Ls https://astral.sh/uv/install.sh | bash\n\n# Create and activate a Python 3.12 environment with uv\nmkdir ~/synthetic-data-sdk; cd ~/synthetic-data-sdk\nuv venv -p 3.12\n\n# Activate virtual environment\nsource .venv/bin/activate\n</code></pre> Setup of <code>uv</code> on Windows <pre><code># Install uv if you don't have it yet\nirm https://astral.sh/uv/install.ps1 | iex\n\n# Create and activate a Python 3.12 environment with uv\nmkdir ~/synthetic-data-sdk; cd ~/synthetic-data-sdk\nuv venv -p 3.12\n\n# Activate virtual environment\n.venv\\Scripts\\activate\n</code></pre> Run Jupyter Lab session via <code>uv</code> <pre><code># Optionally launch jupyter session after SDK installation\nuv run --with jupyter jupyter lab\n</code></pre>"},{"location":"#client-mode","title":"CLIENT mode","text":"<p>This is a light-weight installation for using the SDK in CLIENT mode only. It communicates to a MOSTLY AI platform to perform requested tasks. See e.g. app.mostly.ai for a free-to-use hosted version.</p> <pre><code>uv pip install -U mostlyai\n</code></pre>"},{"location":"#client-local-mode","title":"CLIENT + LOCAL mode","text":"<p>This is a full installation for using the SDK in both CLIENT and LOCAL mode. It includes all dependencies, incl. PyTorch, for training and generating synthetic data locally.</p> <pre><code>uv pip install -U 'mostlyai[local]'\n</code></pre> <p>or alternatively for a GPU setup on Linux (needed for LLM finetuning and inference):</p> <pre><code>uv pip install -U 'mostlyai[local-gpu]'\n</code></pre> <p>On Linux, one can explicitly install the CPU-only variant of torch together with <code>mostlyai[local]</code>:</p> <pre><code># uv pip install\nuv pip install --index-strategy unsafe-first-match -U torch==2.8.0+cpu torchvision==0.23.0+cpu 'mostlyai[local]' --extra-index-url https://download.pytorch.org/whl/cpu\n</code></pre> <pre><code># standard pip install\npip install -U torch==2.8.0+cpu torchvision==0.23.0+cpu 'mostlyai[local]' --extra-index-url https://download.pytorch.org/whl/cpu\n</code></pre> <p>Note for Google Colab users: Installing any of the local extras (<code>mostlyai[local]</code>, or <code>mostlyai[local-gpu]</code>) might need restarting the runtime after installation for the changes to take effect.</p>"},{"location":"#data-connectors","title":"Data Connectors","text":"<p>Add any of the following extras for further data connectors support in LOCAL mode: <code>databricks</code>, <code>googlebigquery</code>, <code>hive</code>, <code>mssql</code>, <code>mysql</code>, <code>oracle</code>, <code>postgres</code>, <code>redshift</code>, <code>snowflake</code>. E.g.</p> <pre><code>uv pip install -U 'mostlyai[local, databricks, snowflake]'\n</code></pre>"},{"location":"#using-docker","title":"Using Docker","text":"<p>As an alternative, you can also build a Docker image, which provides you with an isolated environment for running the SDK in LOCAL mode, with all connector dependencies pre-installed. This approach ensures a consistent runtime environment across all systems. Before proceeding, make sure Docker is installed on your system.</p> Get the image <ul> <li>Pull from official repository</li> </ul> <code>docker pull --platform=linux/amd64 ghcr.io/mostly-ai/sdk</code> <ul> <li>Pull from official repository</li> </ul>    If your environment is capable of executing Makefile (see here), then execute <code>make docker-build</code>.    Otherwise, use <code>docker buildx build . --platform=linux/amd64 -t ghcr.io/mostly-ai/sdk</code> instead.   Start the container <p>This will launch the SDK in LOCAL mode on port 8080 inside the container.</p> <p>If your environment is capable of executing Makefile, then execute <code>make docker-run</code>. Or <code>make docker-run HOST_PORT=8080</code> to forward to a host port of your choice. One could also mount the <code>local_dir</code> via <code>make docker-run HOST_LOCAL_DIR=/path/to/host/folder</code> to make the generators and synthetic datasets directly accessible from the host.</p> <p>Otherwise, use <code>docker run --platform=linux/amd64 -p 8080:8080 ghcr.io/mostly-ai/sdk</code> instead. Optionally, you can use the <code>-v</code> flag to mount a volume for passing files between the host and the container.</p> Connect to the container <p>You can now connect to the SDK running within the container by initializing the SDK in <code>CLIENT</code>&gt; mode on the host machine.</p> <pre><code>from mostlyai.sdk import MostlyAI\n\nmostly = MostlyAI(base_url=\"http://localhost:8080\")\n</code></pre>"},{"location":"#air-gapped-environments","title":"Air-gapped Environments","text":"<p>For air-gapped environments (without internet access), you must install the package using the provided wheel files, including any optional dependencies you require.</p> <p>If your application depends on a Hugging Face language model, you\u2019ll also need to manually download and transfer the model files.</p> Download models from Hugging Face Hub <p>On a machine with internet access, run the following Python script, to download the Hugging Face model to your local Hugging Face cache.</p> <pre><code>#! uv pip install huggingface-hub\nfrom pathlib import Path\nfrom huggingface_hub import snapshot_download\npath = snapshot_download(\n    repo_id=\"Qwen/Qwen2.5-Coder-0.5B\",  # change accordingly\n    token=None,  # insert your HF TOKEN for gated models\n)\nprint(f\"COPY `{Path(path).parent.parent}`\")\n</code></pre>  Next, transfer the printed directory to the air-gapped environment's cache directory located at `~/.cache/huggingface/hub/` (respectively to `HF_HOME`, if that environment variable has been set)."},{"location":"#citation","title":"Citation","text":"<p>Please consider citing our project if you find it useful:</p> <pre><code>@misc{mostlyai,\n      title={Democratizing Tabular Data Access with an Open-Source Synthetic-Data SDK},\n      author={Ivona Krchova and Mariana Vargas Vieyra and Mario Scriminaci and Andrey Sidorenko},\n      year={2025},\n      eprint={2508.00718},\n      archivePrefix={arXiv},\n      primaryClass={cs.LG},\n      url={https://arxiv.org/abs/2508.00718},\n}\n</code></pre>"},{"location":"api_client/","title":"API Reference","text":""},{"location":"api_client/#mostly-ai-client","title":"MOSTLY AI Client","text":"<p>Instantiate an SDK instance, either in CLIENT or in LOCAL mode.</p> <p>Parameters:</p> Name Type Description Default <code>base_url</code> <code>str | None</code> <p>The base URL. If not provided, env var <code>MOSTLY_BASE_URL</code> is used if available, otherwise <code>https://app.mostly.ai</code>.</p> <code>None</code> <code>api_key</code> <code>str | None</code> <p>The API key for authenticating. If not provided, env var <code>MOSTLY_API_KEY</code> is used if available.</p> <code>None</code> <code>bearer_token</code> <code>str | None</code> <p>The bearer token for authenticating. If not provided, env var <code>MOSTLY_BEARER_TOKEN</code> is used if available. Takes precedence over api_key.</p> <code>None</code> <code>local</code> <code>bool | None</code> <p>Whether to run in local mode or not. If not provided, user is prompted to choose between CLIENT and LOCAL mode.</p> <code>None</code> <code>local_dir</code> <code>str | Path | None</code> <p>The directory to use for local mode. If not provided, <code>~/mostlyai</code> is used.</p> <code>None</code> <code>local_port</code> <code>int | None</code> <p>The port to use for local mode with TCP transport. If not provided, UDS transport is used.</p> <code>None</code> <code>timeout</code> <code>float</code> <p>Timeout for HTTPS requests in seconds. Default is 60 seconds.</p> <code>60.0</code> <code>ssl_verify</code> <code>bool</code> <p>Whether to verify SSL certificates. Default is True.</p> <code>True</code> <code>test_connection</code> <code>bool</code> <p>Whether to test the connection during initialization. Default is True.</p> <code>True</code> <code>quiet</code> <code>bool</code> <p>Whether to suppress rich output. Default is False.</p> <code>False</code> Example for SDK in CLIENT mode with explicit arguments <pre><code>from mostlyai.sdk import MostlyAI\nmostly = MostlyAI(\n    api_key='INSERT_YOUR_API_KEY',\n    base_url='https://app.mostly.ai',\n)\nmostly\n# MostlyAI(base_url='https://app.mostly.ai', api_key='***')\n</code></pre> Example for SDK in CLIENT mode with bearer token <pre><code>from mostlyai.sdk import MostlyAI\nmostly = MostlyAI(\n    bearer_token='INSERT_YOUR_BEARER_TOKEN',\n    base_url='https://app.mostly.ai',\n)\nmostly\n# MostlyAI(base_url='https://app.mostly.ai', bearer_token='***')\n</code></pre> Example for SDK in CLIENT mode with environment variables <pre><code>import os\nfrom mostlyai.sdk import MostlyAI\nos.environ[\"MOSTLY_API_KEY\"] = \"INSERT_YOUR_API_KEY\"\nos.environ[\"MOSTLY_BASE_URL\"] = \"https://app.mostly.ai\"\nmostly = MostlyAI()\nmostly\n# MostlyAI(base_url='https://app.mostly.ai', api_key='***')\n</code></pre> Example for SDK in CLIENT mode with bearer token environment variable <pre><code>import os\nfrom mostlyai.sdk import MostlyAI\nos.environ[\"MOSTLY_BEARER_TOKEN\"] = \"INSERT_YOUR_BEARER_TOKEN\"\nos.environ[\"MOSTLY_BASE_URL\"] = \"https://app.mostly.ai\"\nmostly = MostlyAI()\nmostly\n# MostlyAI(base_url='https://app.mostly.ai', bearer_token='***')\n</code></pre> Example for SDK in LOCAL mode connecting via UDS <pre><code>from mostlyai.sdk import MostlyAI\nmostly = MostlyAI(local=True)\nmostly\n# MostlyAI(local=True)\n</code></pre> Example for SDK in LOCAL mode connecting via TCP <pre><code>from mostlyai.sdk import MostlyAI\nmostly = MostlyAI(local=True, local_port=8080)\nmostly\n# MostlyAI(local=True, local_port=8080)\n</code></pre>"},{"location":"api_client/#mostlyai.sdk.client.api.MostlyAI.about","title":"mostlyai.sdk.client.api.MostlyAI.about","text":"<pre><code>about()\n</code></pre> <p>Retrieve information about the platform.</p> <p>Returns:</p> Name Type Description <code>AboutService</code> <code>AboutService</code> <p>Information about the platform.</p> Example for retrieving information about the platform <pre><code>from mostlyai.sdk import MostlyAI\nmostly = MostlyAI()\nmostly.about()\n# {'version': 'v316', 'assistant': True}\n</code></pre>"},{"location":"api_client/#mostlyai.sdk.client.api.MostlyAI.computes","title":"mostlyai.sdk.client.api.MostlyAI.computes","text":"<pre><code>computes()\n</code></pre> <p>Retrieve a list of available compute resources, that can be used for executing tasks. Returns:     list[dict[str, Any]]: A list of available compute resources.</p> Example for retrieving available compute resources <pre><code>from mostlyai.sdk import MostlyAI\nmostly = MostlyAI()\nmostly.computes()\n# [{'id': '...', 'name': 'CPU Large',...]\n</code></pre>"},{"location":"api_client/#mostlyai.sdk.client.api.MostlyAI.connect","title":"mostlyai.sdk.client.api.MostlyAI.connect","text":"<pre><code>connect(config, test_connection=True)\n</code></pre> <p>Create a connector and optionally validate the connection before saving.</p> <p>There are 3 access types for a connector (which are independent of the connector type):</p> <ul> <li><code>READ_PROTECTED</code>:  The connector is restricted to being used solely as a source for training a generator. Direct data access is not permitted, only schema access via <code>c.locations(prefix)</code> and <code>c.schema(location)</code> is available.</li> <li><code>READ_DATA</code>: This connector allows full read access. It can also be used as a source for training a generator.</li> <li><code>WRITE_DATA</code>: This connector allows full read and write access. It can be also used as a source for training a generator, as well as a destination for delivering a synthetic dataset.</li> </ul> <p>Parameters:</p> Name Type Description Default <code>config</code> <code>ConnectorConfig | dict[str, Any]</code> <p>Configuration for the connector. Can be either a ConnectorConfig object or an equivalent dictionary.</p> required <code>test_connection</code> <code>bool | None</code> <p>Whether to validate the connection before saving. Default is True.</p> <code>True</code> <p>Returns:</p> Name Type Description <code>Connector</code> <code>Connector</code> <p>The created connector.</p> Example for creating a connector to a AWS S3 storage <pre><code>from mostlyai.sdk import MostlyAI\nmostly = MostlyAI()\nc = mostly.connect(\n    config={\n        'access_type': 'READ_PROTECTED',  # or 'READ_DATA' or 'WRITE_DATA'\n        'type': 'S3_STORAGE',\n        'config': {\n            'accessKey': '...',\n        },\n        'secrets': {\n            'secretKey': '...'\n        }\n    }\n)\n</code></pre> <p>The structures of the <code>config</code>, <code>secrets</code> and <code>ssl</code> parameters depend on the connector <code>type</code>:</p> <ul> <li>Cloud storage:   <pre><code>- type: AZURE_STORAGE\n  config:\n    accountName: string\n    clientId: string (required for auth via service principal)\n    tenantId: string (required for auth via service principal)\n  secrets:\n    accountKey: string (required for regular auth)\n    clientSecret: string (required for auth via service principal)\n\n- type: GOOGLE_CLOUD_STORAGE\n  config:\n  secrets:\n    keyFile: string\n\n- type: S3_STORAGE\n  config:\n    accessKey: string\n    endpointUrl: string (only needed for S3-compatible storage services other than AWS)\n  secrets:\n    secretKey: string\n</code></pre></li> <li>Database:   <pre><code>- type: BIGQUERY\n  config:\n  secrets:\n    keyFile: string\n\n- type: DATABRICKS\n  config:\n    host: string\n    httpPath: string\n    catalog: string\n    clientId: string (required for auth via service principal)\n    tenantId: string (required for auth via service principal)\n  secrets:\n    accessToken: string (required for regular auth)\n    clientSecret: string (required for auth via service principal)\n\n- type: HIVE\n  config:\n    host: string\n    port: integer, default: 10000\n    username: string (required for regular auth)\n    kerberosEnabled: boolean, default: false\n    kerberosPrincipal: string (required if kerberosEnabled)\n    kerberosKrb5Conf: string (required if kerberosEnabled)\n    sslEnabled: boolean, default: false\n  secrets:\n    password: string (required for regular auth)\n    kerberosKeytab: base64-encoded string (required if kerberosEnabled)\n  ssl:\n    caCertificate: base64-encoded string\n\n- type: MARIADB\n  config:\n    host: string\n    port: integer, default: 3306\n    username: string\n  secrets:\n    password: string\n\n- type: MSSQL\n  config:\n    host: string\n    port: integer, default: 1433\n    username: string\n    database: string\n  secrets:\n   password: string\n\n- type: MYSQL\n  config:\n    host: string\n    port: integer, default: 3306\n    username: string\n  secrets:\n    password: string\n\n- type: ORACLE\n  config:\n    host: string\n    port: integer, default: 1521\n    username: string\n    connectionType: enum {SID, SERVICE_NAME}, default: SID\n    database: string, default: ORCL\n  secrets:\n    password: string\n\n- type: POSTGRES\n  config:\n    host: string\n    port: integer, default: 5432\n    username: string\n    database: string\n    sslEnabled: boolean, default: false\n  secrets:\n    password: string\n  ssl:\n    rootCertificate: base64-encoded string\n    sslCertificate: base64-encoded string\n    sslCertificateKey: base64-encoded string\n\n- type: SNOWFLAKE\n  config:\n    account: string\n    username: string\n    warehouse: string, default: COMPUTE_WH\n    database: string\n  secrets:\n    password: string\n\n- type: REDSHIFT\n  config:\n    host: string\n    port: integer, default: 5439\n    username: string\n    database: string\n  secrets:\n    password: string\n</code></pre></li> </ul>"},{"location":"api_client/#mostlyai.sdk.client.api.MostlyAI.generate","title":"mostlyai.sdk.client.api.MostlyAI.generate","text":"<pre><code>generate(\n    generator,\n    config=None,\n    size=None,\n    seed=None,\n    name=None,\n    start=True,\n    wait=True,\n    progress_bar=True,\n)\n</code></pre> <p>Create a synthetic dataset resource. Once generated, it will include the data as well as optionally a data report.</p> <p>Note: A synthetic dataset is initially being configured. That generation job can be either launched immediately or later. One can check progress via <code>sd.generation.progress()</code>. Once the job has finished, the synthetic dataset is available for download via <code>sd.data()</code>, and the reports are available via <code>sd.reports()</code>.</p> <p>Parameters:</p> Name Type Description Default <code>generator</code> <code>Generator | str</code> <p>The generator instance or its UUID.</p> required <code>config</code> <code>SyntheticDatasetConfig | dict | None</code> <p>Configuration for the synthetic dataset.</p> <code>None</code> <code>size</code> <code>int | dict[str, int] | None</code> <p>Sample size(s) for the subject table(s).</p> <code>None</code> <code>seed</code> <code>Seed | dict[str, Seed] | None</code> <p>Either a single Seed for the subject table, or a dictionary with table names as keys and Seeds as values. Seed can either be a DataFrame or a path to a CSV or PARQUET file. Check generator details (<code>generator.tables[i].columns[j].value_range</code>) for possible value ranges.</p> <code>None</code> <code>name</code> <code>str | None</code> <p>Name of the synthetic dataset.</p> <code>None</code> <code>start</code> <code>bool</code> <p>Whether to start generation immediately. Default is True.</p> <code>True</code> <code>wait</code> <code>bool</code> <p>Whether to wait for generation to finish. Default is True.</p> <code>True</code> <code>progress_bar</code> <code>bool</code> <p>Whether to display a progress bar during generation. Default is True.</p> <code>True</code> <p>Returns:</p> Name Type Description <code>SyntheticDataset</code> <code>SyntheticDataset</code> <p>The created synthetic dataset.</p> Example configuration using short-hand notation <pre><code>from mostlyai.sdk import MostlyAI\nmostly = MostlyAI()\nsd = mostly.generate(generator=g, size=1000)\n</code></pre> Example configuration using a dictionary <pre><code>from mostlyai.sdk import MostlyAI\nmostly = MostlyAI()\nsd = mostly.generate(\n    generator=g,\n    config={\n        'tables': [\n            {\n                'name': 'data',\n                'configuration': {  # all parameters are optional!\n                    'sample_size': None,  # set to None to generate as many samples as original; otherwise, set to an integer; only applicable for subject tables\n                    # 'sample_seed_data': seed_df,  # provide a DataFrame to conditionally generate samples; only applicable for subject tables\n                    'sampling_temperature': 1.0,\n                    'sampling_top_p': 1.0,\n                    'rebalancing': {\n                        'column': 'age',\n                        'probabilities': {'male': 0.5, 'female': 0.5},\n                    },\n                    'imputation': {\n                        'columns': ['age'],\n                    },\n                    'fairness': {\n                        'target_column': 'income',\n                        'sensitive_columns': ['gender'],\n                    },\n                    'enable_data_report': True,  # disable for faster generation\n                }\n            }\n        ]\n    }\n)\n</code></pre>"},{"location":"api_client/#mostlyai.sdk.client.api.MostlyAI.me","title":"mostlyai.sdk.client.api.MostlyAI.me","text":"<pre><code>me()\n</code></pre> <p>Retrieve information about the current user.</p> <p>Returns:</p> Name Type Description <code>CurrentUser</code> <code>CurrentUser</code> <p>Information about the current user.</p> Example for retrieving information about the current user <pre><code>from mostlyai.sdk import MostlyAI\nmostly = MostlyAI()\nmostly.me()\n# {'id': '488f2f26-...', 'first_name': 'Tom', ...}\n</code></pre>"},{"location":"api_client/#mostlyai.sdk.client.api.MostlyAI.models","title":"mostlyai.sdk.client.api.MostlyAI.models","text":"<pre><code>models()\n</code></pre> <p>Retrieve a list of available models of a specific type.</p> <p>Returns:</p> Type Description <code>dict[str:(list[str])]</code> <p>dict[str, list[str]]: A dictionary with list of available models for each ModelType.</p> Example for retrieving available models <pre><code>from mostlyai.sdk import MostlyAI\nmostly = MostlyAI()\nmostly.models()\n# {\n#    'TABULAR\": ['MOSTLY_AI/Small', 'MOSTLY_AI/Medium', 'MOSTLY_AI/Large'],\n#    'LANGUAGE\": ['MOSTLY_AI/LSTMFromScratch-3m', 'microsoft/phi-1_5', ..],\n# }\n</code></pre>"},{"location":"api_client/#mostlyai.sdk.client.api.MostlyAI.probe","title":"mostlyai.sdk.client.api.MostlyAI.probe","text":"<pre><code>probe(\n    generator,\n    size=None,\n    seed=None,\n    config=None,\n    return_type=\"auto\",\n)\n</code></pre> <p>Probe a generator for a new synthetic dataset (synchronously).</p> <p>Parameters:</p> Name Type Description Default <code>generator</code> <code>Generator | str</code> <p>The generator instance or its UUID.</p> required <code>size</code> <code>int | dict[str, int] | None</code> <p>Sample size(s) for the subject table(s). Default is 1, if no seed is provided.</p> <code>None</code> <code>seed</code> <code>Seed | dict[str, Seed] | None</code> <p>Either a single Seed for the subject table, or a dictionary with table names as keys and Seeds as values. Seed can either be a DataFrame or a path to a CSV or PARQUET file. Check generator details (<code>generator.tables[i].columns[j].value_range</code>) for possible value ranges.</p> <code>None</code> <code>config</code> <code>SyntheticProbeConfig | dict | None</code> <p>Configuration for the probe.</p> <code>None</code> <code>return_type</code> <code>Literal['auto', 'dict']</code> <p>The type of the return value. \"dict\" will always provide a dictionary of DataFrames. \"auto\" will return a single DataFrame for a single-table generator, and a dictionary of DataFrames for a multi-table generator. Default is \"auto\".</p> <code>'auto'</code> <p>Returns:</p> Type Description <code>DataFrame | dict[str, DataFrame]</code> <p>pd.DataFrame | dict[str, pd.DataFrame]: The created synthetic probe. See return_type for the format of the return value.</p> Example for probing a generator for 10 synthetic samples <pre><code>from mostlyai.sdk import MostlyAI\nmostly = MostlyAI()\ndata = mostly.probe('INSERT_YOUR_GENERATOR_ID', size=10, return_type=\"dict\")\n</code></pre> Example for conditional probing based on a seed DataFrame <pre><code>import pandas as pd\nfrom mostlyai.sdk import MostlyAI\nmostly = MostlyAI()\nseed = pd.DataFrame({'col1': ['x', 'y'], 'col2': [13, 74]})\ndata = mostly.probe('INSERT_YOUR_GENERATOR_ID', seed=seed, return_type=\"dict\")\n</code></pre> Example for advanced probing configuration <pre><code>import pandas as pd\nfrom mostlyai.sdk import MostlyAI\nmostly = MostlyAI()\ndata = mostly.probe(\n    'INSERT_YOUR_GENERATOR_ID',\n    config={\n        'tables': [{\n            'name': 'tbl1',\n            'configuration': {\n                'sample_size': 100,\n                'sampling_temperature': 1.0,\n                'sampling_top_p': 1.0,\n                'rebalancing': {'column': 'country', 'probabilities': {'US': 0.5, 'CA', 0.3}},\n                'imputation': {'columns': ['age']},\n                'fairness': {'target_column': 'income', 'sensitive_columns': ['gender']},\n            }\n        }]\n    },\n    return_type=\"dict\"\n)\n</code></pre> <p>Example for multi-table conditional probing (e.g., time-series with 100 simulations):     <pre><code># create 100 simulations for a specific user profile and first 2 purchases\nuser_ids = [f\"sim-{i:03d}\" for i in range(100)]\nseed_users = pd.DataFrame({'users_id': user_ids})\nseed_purchases = pd.DataFrame({\n    'users_id': [uid for uid in user_ids for _ in range(2)],\n    'date': pd.to_datetime(['1997-01-12', '1997-01-12'] * 100),\n    'cds': [1, 5] * 100,\n    'amt': [12.00, 77.00] * 100,\n})\ndata = mostly.probe(\n    'INSERT_YOUR_GENERATOR_ID',\n    seed={'users': seed_users, 'purchases': seed_purchases}\n)\n# Note: For multi-table seeds, provide unique PK/FK values to match records between tables\n</code></pre></p>"},{"location":"api_client/#mostlyai.sdk.client.api.MostlyAI.train","title":"mostlyai.sdk.client.api.MostlyAI.train","text":"<pre><code>train(\n    config=None,\n    data=None,\n    name=None,\n    start=True,\n    wait=True,\n    progress_bar=True,\n)\n</code></pre> <p>Create a generator resource. Once trained, it will include the model as well as optionally a model report.</p> <p>Note: A generator is initially being configured. That training job can be either launched immediately or later. One can check progress via <code>g.training.progress()</code>. Once the job has finished, the generator is available for use.</p> <p>Parameters:</p> Name Type Description Default <code>config</code> <code>GeneratorConfig | dict | None</code> <p>The configuration parameters of the generator to be created. Either <code>config</code> or <code>data</code> must be provided.</p> <code>None</code> <code>data</code> <code>DataFrame | str | Path | None</code> <p>A single pandas DataFrame, or a path to a CSV or PARQUET file. Either <code>config</code> or <code>data</code> must be provided.</p> <code>None</code> <code>name</code> <code>str | None</code> <p>Name of the generator.</p> <code>None</code> <code>start</code> <code>bool</code> <p>Whether to start training immediately. Default is True.</p> <code>True</code> <code>wait</code> <code>bool</code> <p>Whether to wait for training to finish. Default is True.</p> <code>True</code> <code>progress_bar</code> <code>bool</code> <p>Whether to display a progress bar during training. Default is True.</p> <code>True</code> <p>Returns:</p> Name Type Description <code>Generator</code> <code>Generator</code> <p>The created generator.</p> Example of a single flat table with default configurations <pre><code># read original data\nimport pandas as pd\ndf = pd.read_csv('https://github.com/mostly-ai/public-demo-data/raw/dev/census/census10k.parquet')\n# instantiate client\nfrom mostlyai.sdk import MostlyAI\nmostly = MostlyAI()\n# train generator\ng = mostly.train(\n    name='census',\n    data=df,     # alternatively, pass a path to a CSV or PARQUET file\n    start=True,  # start training immediately\n    wait=True,   # wait for training to finish\n)\n</code></pre> Example of a single flat table with custom configurations <pre><code># read original data\nimport pandas as pd\ndf = pd.read_csv('https://github.com/mostly-ai/public-demo-data/raw/dev/baseball/players.csv.gz')\n# instantiate client\nfrom mostlyai.sdk import MostlyAI\nmostly = MostlyAI()\n# configure generator via dictionary\ng = mostly.train(\n    config={                                             # see `mostlyai.sdk.domain.GeneratorConfig`\n        'name': 'Baseball Players',\n        'tables': [\n            {                                            # see `mostlyai.sdk.domain.SourceTableConfig`\n                'name': 'players',                       # name of the table (required)\n                'data': df,                              # either provide data as a pandas DataFrame\n                'source_connector_id': None,             # - or pass a source_connector_id\n                'location': None,                        # - together with a table location\n                'primary_key': 'id',                     # specify the primary key column, if one is present\n                'tabular_model_configuration': {         # see `mostlyai.sdk.domain.ModelConfiguration`; all settings are optional!\n                    'model': 'MOSTLY_AI/Medium',         # check `mostly.models()` for available models\n                    'batch_size': None,                  # set a custom physical training batch size\n                    'max_sample_size': 100_000,          # cap sample size to 100k; set to None for max accuracy\n                    'max_epochs': 50,                    # cap training to 50 epochs; set to None for max accuracy\n                    'max_training_time': 60,             # cap runtime to 60min; set to None for max accuracy\n                    'enable_flexible_generation': True,  # allow seed, imputation, rebalancing and fairness; set to False for max accuracy\n                    'value_protection': True,            # privacy protect value ranges; set to False for allowing all seen values\n                    'differential_privacy': {            # set DP configs if explicitly requested\n                        'max_epsilon': 5.0,                # - max DP epsilon value, used as stopping criterion\n                        'noise_multiplier': 1.5,           # - noise multiplier for DP-SGD training\n                        'max_grad_norm': 1.0,              # - max grad norm for DP-SGD training\n                        'delta': 1e-5,                     # - delta value for DP-SGD training\n                        'value_protection_epsilon': 2.0,   # - DP epsilon for determining value ranges / data domains\n                    },\n                    'enable_model_report': True,         # generate a model report, including quality metrics\n                },\n                'columns': [                             # list columns (optional); see `mostlyai.sdk.domain.ModelEncodingType`\n                    {'name': 'id', 'model_encoding_type': 'TABULAR_CATEGORICAL'},\n                    {'name': 'bats', 'model_encoding_type': 'TABULAR_CATEGORICAL'},\n                    {'name': 'throws', 'model_encoding_type': 'TABULAR_CATEGORICAL'},\n                    {'name': 'birthDate', 'model_encoding_type': 'TABULAR_DATETIME'},\n                    {'name': 'weight', 'model_encoding_type': 'TABULAR_NUMERIC_AUTO'},\n                    {'name': 'height', 'model_encoding_type': 'TABULAR_NUMERIC_AUTO'},\n                ],\n            }\n        ]\n    },\n    start=True,  # start training immediately\n    wait=True,   # wait for training to finish\n)\n</code></pre> <p>Example of a multi-table sequential dataset (time series):     <pre><code># read original data\nimport pandas as pd\ndf_purchases = pd.read_csv('https://github.com/mostly-ai/public-demo-data/raw/dev/cdnow/purchases.csv.gz')\ndf_users = df_purchases[['users_id']].drop_duplicates()  # create a table representing subjects / groups, if not already present\n# instantiate client\nfrom mostlyai.sdk import MostlyAI\nmostly = MostlyAI()\n# train generator\ng = mostly.train(config={\n    'name': 'CDNOW',                      # name of the generator\n    'tables': [{                          # provide list of all tables\n        'name': 'users',\n        'data': df_users,\n        'primary_key': 'users_id',        # define PK column\n    }, {\n        'name': 'purchases',\n        'data': df_purchases,\n        'foreign_keys': [{                 # define FK columns, with one providing the context\n            'column': 'users_id',\n            'referenced_table': 'users',\n            'is_context': True\n        }],\n        'tabular_model_configuration': {\n            'max_sample_size': 10_000,     # cap sample size to 10k users; set to None for max accuracy\n            'max_training_time': 60,       # cap runtime to 60min; set to None for max accuracy\n            'max_sequence_window': 10,     # optionally limit the sequence window\n        },\n    }],\n}, start=True, wait=True)\n</code></pre></p> Example of a multi-table relational dataset with non-context foreign key <pre><code># read original data\nimport pandas as pd\nrepo_url = 'https://github.com/mostly-ai/public-demo-data/raw/refs/heads/dev/berka/data'\naccounts_df = pd.read_csv(f'{repo_url}/account.csv.gz')\ndisp_df = pd.read_csv(f'{repo_url}/disp.csv.gz')\nclients_df = pd.read_csv(f'{repo_url}/client.csv.gz')\n# instantiate client\nfrom mostlyai.sdk import MostlyAI\nmostly = MostlyAI()\n# train generator\ng = mostly.train(config={\n    'name': 'BERKA',\n    'tables': [{\n        'name': 'clients',\n        'data': clients_df,\n        'primary_key': 'client_id',       # define PK column\n    }, {\n        'name': 'accounts',\n        'data': accounts_df,\n        'primary_key': 'account_id',      # define PK column\n    }, {\n        'name': 'disp',\n        'data': disp_df,\n        'primary_key': 'disp_id',         # define PK column\n        'foreign_keys': [{                # define FK columns: max 1 Context FK allowed; referenced context tables must NOT result in circular references;\n            'column': 'client_id',\n            'referenced_table': 'clients',\n            'is_context': True            # Context FK: the `disp` records that belong to the same `client` will be learned and generated together - with the context of the parent;\n                                          # -&gt; patterns between child and parent (and grand-parent) and between siblings belonging to the same parent will all be retained;\n        }, {\n            'column': 'account_id',\n            'referenced_table': 'accounts',\n            'is_context': False           # Non-Context FK: a dedicated model will be trained to learn matching a `disp` record with a suitable `account` record;\n                                          # -&gt; patterns between child and parent will be retained, but not between siblings belonging to the same parent;\n        }],\n    }],\n}, start=True, wait=True)\n</code></pre> Example of a single flat table with TABULAR and LANGUAGE models <pre><code># read original data\nimport pandas as pd\ndf = pd.read_parquet('https://github.com/mostly-ai/public-demo-data/raw/dev/headlines/headlines.parquet')\n\n# instantiate SDK\nfrom mostlyai.sdk import MostlyAI\nmostly = MostlyAI()\n\n# print out available LANGUAGE models\nprint(mostly.models()[\"LANGUAGE\"])\n\n# train a generator\ng = mostly.train(config={\n    'name': 'Headlines',\n    'tables': [{\n        'name': 'headlines',\n        'data': df,\n        'columns': [                                 # configure TABULAR + LANGUAGE cols\n            {'name': 'category', 'model_encoding_type': 'TABULAR_CATEGORICAL'},\n            {'name': 'date', 'model_encoding_type': 'TABULAR_DATETIME'},\n            {'name': 'headline', 'model_encoding_type': 'LANGUAGE_TEXT'},\n        ],\n        'tabular_model_configuration': {              # tabular model configuration (optional)\n            'max_sample_size': None,                  # eg. use all availabel training samples for max accuracy\n            'max_training_time': None,                # eg. set no upper time limit for max accuracy\n        },\n        'language_model_configuration': {             # language model configuration (optional)\n            'max_sample_size': 50_000,                # eg. cap sample size to 50k; set None for max accuracy\n            'max_training_time': 60,                  # eg. cap runtime to 60min; set None for max accuracy\n            'model': 'MOSTLY_AI/LSTMFromScratch-3m',  # use a light-weight LSTM model, trained from scratch (GPU recommended)\n            #'model': 'microsoft/phi-1.5',            # alternatively use a pre-trained HF-hosted LLM model (GPU required)\n        }\n    }],\n}, start=True, wait=True)\n</code></pre>"},{"location":"api_client/#generators","title":"Generators","text":""},{"location":"api_client/#mostlyai.sdk.client.generators._MostlyGeneratorsClient.create","title":"mostlyai.sdk.client.generators._MostlyGeneratorsClient.create","text":"<pre><code>create(config)\n</code></pre> <p>Create a generator. The generator will be in the NEW state and will need to be trained before it can be used.</p> <p>See <code>mostly.train</code> for more details.</p> <p>Parameters:</p> Name Type Description Default <code>config</code> <code>GeneratorConfig | dict</code> <p>Configuration for the generator.</p> required <p>Returns:</p> Type Description <code>Generator</code> <p>The created generator object.</p> Example for creating a generator <pre><code>from mostlyai.sdk import MostlyAI\nmostly = MostlyAI()\ng = mostly.generators.create(\n    config={\n        \"name\": \"US Census\",\n        \"tables\": [{\n            \"name\": \"census\",\n            \"data\": trn_df,\n        }]\n    )\n)\nprint(\"status:\", g.training_status)\n# status: NEW\ng.training.start()  # start training\nprint(\"status:\", g.training_status)\n# status: QUEUED\ng.training.wait()   # wait for training to complete\nprint(\"status:\", g.training_status)\n# status: DONE\n</code></pre>"},{"location":"api_client/#mostlyai.sdk.client.generators._MostlyGeneratorsClient.get","title":"mostlyai.sdk.client.generators._MostlyGeneratorsClient.get","text":"<pre><code>get(generator_id)\n</code></pre> <p>Retrieve a generator by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>generator_id</code> <code>str</code> <p>The unique identifier of the generator.</p> required <p>Returns:</p> Name Type Description <code>Generator</code> <code>Generator</code> <p>The retrieved generator object.</p> Example for retrieving a generator <pre><code>from mostlyai.sdk import MostlyAI\nmostly = MostlyAI()\ng = mostly.generators.get('INSERT_YOUR_GENERATOR_ID')\ng\n</code></pre>"},{"location":"api_client/#mostlyai.sdk.client.generators._MostlyGeneratorsClient.import_from_file","title":"mostlyai.sdk.client.generators._MostlyGeneratorsClient.import_from_file","text":"<pre><code>import_from_file(file_path)\n</code></pre> <p>Import a generator from a file.</p> <p>Parameters:</p> Name Type Description Default <code>file_path</code> <code>str | Path</code> <p>Local file path or URL of the generator to import.</p> required <p>Returns:</p> Type Description <code>Generator</code> <p>The imported generator object.</p> Example <pre><code>from mostlyai.sdk import MostlyAI\nmostly = MostlyAI()\n\n# Import from local file\ng = mostly.generators.import_from_file('path/to/generator')\n\n# Or import from URL\ng = mostly.generators.import_from_file('https://example.com/path/to/generator.zip')\n</code></pre>"},{"location":"api_client/#mostlyai.sdk.client.generators._MostlyGeneratorsClient.list","title":"mostlyai.sdk.client.generators._MostlyGeneratorsClient.list","text":"<pre><code>list(\n    offset=0,\n    limit=None,\n    status=None,\n    search_term=None,\n    owner_id=None,\n    visibility=None,\n    created_from=None,\n    created_to=None,\n    sort_by=None,\n)\n</code></pre> <p>List generators.</p> <p>Paginate through all generators accessible by the user.</p> <p>Parameters:</p> Name Type Description Default <code>offset</code> <code>int</code> <p>Offset for the entities in the response.</p> <code>0</code> <code>limit</code> <code>int | None</code> <p>Limit for the number of entities in the response.</p> <code>None</code> <code>status</code> <code>str | list[str] | None</code> <p>Filter by training status.</p> <code>None</code> <code>search_term</code> <code>str | None</code> <p>Filter by name or description.</p> <code>None</code> <code>owner_id</code> <code>str | list[str] | None</code> <p>Filter by owner ID.</p> <code>None</code> <code>visibility</code> <code>str | list[str] | None</code> <p>Filter by visibility (e.g., PUBLIC, PRIVATE or UNLISTED).</p> <code>None</code> <code>created_from</code> <code>str | None</code> <p>Filter by creation date, not older than this date. Format: YYYY-MM-DD.</p> <code>None</code> <code>created_to</code> <code>str | None</code> <p>Filter by creation date, not younger than this date. Format: YYYY-MM-DD.</p> <code>None</code> <code>sort_by</code> <code>str | list[str] | None</code> <p>Sort by field. Either NO_OF_THREADS, NO_OF_LIKES, RECENCY, or NO_OF_SYNTHETIC_DATASETS.</p> <code>None</code> <p>Returns:</p> Type Description <code>Iterator[GeneratorListItem]</code> <p>Iterator[GeneratorListItem]: An iterator over generator list items.</p> Example for listing all generators <pre><code>from mostlyai.sdk import MostlyAI\nmostly = MostlyAI()\nfor g in mostly.generators.list():\n    print(f\"Generator `{g.name}` ({g.training_status}, {g.id})\")\n</code></pre> Example for searching trained generators via key word <pre><code>from mostlyai.sdk import MostlyAI\nmostly = MostlyAI()\ngenerators = list(mostly.generators.list(search_term=\"census\", status=\"DONE\"))\nprint(f\"Found {len(generators)} generators\")\n</code></pre>"},{"location":"api_client/#generator","title":"Generator","text":"<p>A generator is a set models that can generate synthetic data.</p> <p>The generator can be trained on one or more source tables. A quality assurance report is generated for each model.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The unique identifier of a generator.</p> required <code>name</code> <code>str</code> <p>The name of a generator.</p> required <code>description</code> <code>str | None</code> <p>The description of a generator.</p> <code>None</code> <code>training_status</code> <code>ProgressStatus</code> required <code>training_time</code> <code>AwareDatetime | None</code> <p>The UTC date and time when the training has finished.</p> <code>None</code> <code>usage</code> <code>GeneratorUsage | None</code> <code>None</code> <code>metadata</code> <code>Metadata | None</code> <code>None</code> <code>accuracy</code> <code>float | None</code> <p>The overall accuracy of the trained generator. This is the average of the overall accuracy scores of all trained models.</p> <code>None</code> <code>tables</code> <code>list[SourceTable] | None</code> <p>The tables of this generator</p> <code>None</code> <code>random_state</code> <code>int | None</code> <p>Seed for the random number generators. If None, the random number generator is initialized randomly, yielding different results for every run. Setting it to a specific integer ensures reproducible results across runs. Useful when consistent results are desired, e.g. for testing or debugging.</p> <code>None</code> <code>training</code> <code>Any | None</code> <code>None</code>"},{"location":"api_client/#mostlyai.sdk.domain.Generator.Training","title":"mostlyai.sdk.domain.Generator.Training","text":""},{"location":"api_client/#mostlyai.sdk.domain.Generator.Training.cancel","title":"mostlyai.sdk.domain.Generator.Training.cancel","text":"<pre><code>cancel()\n</code></pre> <p>Cancel training.</p>"},{"location":"api_client/#mostlyai.sdk.domain.Generator.Training.logs","title":"mostlyai.sdk.domain.Generator.Training.logs","text":"<pre><code>logs(file_path=None)\n</code></pre> <p>Download the training logs and save to file.</p> <p>Parameters:</p> Name Type Description Default <code>file_path</code> <code>str | Path | None</code> <p>The file path to save the logs. Default is the current working directory.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>Path</code> <code>Path</code> <p>The path to the saved file.</p>"},{"location":"api_client/#mostlyai.sdk.domain.Generator.Training.progress","title":"mostlyai.sdk.domain.Generator.Training.progress","text":"<pre><code>progress()\n</code></pre> <p>Retrieve job progress of training.</p> <p>Returns:</p> Name Type Description <code>JobProgress</code> <code>JobProgress</code> <p>The job progress of the training process.</p>"},{"location":"api_client/#mostlyai.sdk.domain.Generator.Training.start","title":"mostlyai.sdk.domain.Generator.Training.start","text":"<pre><code>start()\n</code></pre> <p>Start training.</p>"},{"location":"api_client/#mostlyai.sdk.domain.Generator.Training.wait","title":"mostlyai.sdk.domain.Generator.Training.wait","text":"<pre><code>wait(progress_bar=True, interval=2)\n</code></pre> <p>Poll training progress and loop until training has completed.</p> <p>Parameters:</p> Name Type Description Default <code>progress_bar</code> <code>bool</code> <p>If true, displays the progress bar. Default is True.</p> <code>True</code> <code>interval</code> <code>float</code> <p>The interval in seconds to poll the job progress. Default is 2 seconds.</p> <code>2</code>"},{"location":"api_client/#mostlyai.sdk.domain.Generator.clone","title":"mostlyai.sdk.domain.Generator.clone","text":"<pre><code>clone(training_status='new')\n</code></pre> <p>Clone the generator.</p> <p>Parameters:</p> Name Type Description Default <code>training_status</code> <code>Literal['new', 'continue']</code> <p>The training status of the cloned generator. Default is \"new\".</p> <code>'new'</code> <p>Returns:</p> Name Type Description <code>Generator</code> <code>Generator</code> <p>The cloned generator object.</p>"},{"location":"api_client/#mostlyai.sdk.domain.Generator.config","title":"mostlyai.sdk.domain.Generator.config","text":"<pre><code>config()\n</code></pre> <p>Retrieve writable generator properties.</p> <p>Returns:</p> Name Type Description <code>GeneratorConfig</code> <code>GeneratorConfig</code> <p>The generator properties as a configuration object.</p>"},{"location":"api_client/#mostlyai.sdk.domain.Generator.delete","title":"mostlyai.sdk.domain.Generator.delete","text":"<pre><code>delete()\n</code></pre> <p>Delete the generator.</p>"},{"location":"api_client/#mostlyai.sdk.domain.Generator.export_to_file","title":"mostlyai.sdk.domain.Generator.export_to_file","text":"<pre><code>export_to_file(file_path=None)\n</code></pre> <p>Export generator and save to file.</p> <p>Parameters:</p> Name Type Description Default <code>file_path</code> <code>str | Path | None</code> <p>The file path to save the generator.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>Path</code> <code>Path</code> <p>The path to the saved file.</p>"},{"location":"api_client/#mostlyai.sdk.domain.Generator.reports","title":"mostlyai.sdk.domain.Generator.reports","text":"<pre><code>reports(file_path=None, display=False)\n</code></pre> <p>Download or display the quality assurance reports.</p> <p>If display is True, the report is rendered inline via IPython display and no file is downloaded. Otherwise, the report is downloaded and saved to file_path (or a default location if None).</p> <p>Note that reports are not available for generators that were trained with less than 100 samples or had <code>enable_model_report</code> set to <code>False</code>.</p> <p>Parameters:</p> Name Type Description Default <code>file_path</code> <code>str | Path | None</code> <p>The file path to save the zipped reports (ignored if display=True).</p> <code>None</code> <code>display</code> <code>bool</code> <p>If True, render the report inline instead of downloading it.</p> <code>False</code> <p>Returns:</p> Type Description <code>Path | None</code> <p>Path | None: The path to the saved file if downloading, or None if display=True.</p>"},{"location":"api_client/#mostlyai.sdk.domain.Generator.update","title":"mostlyai.sdk.domain.Generator.update","text":"<pre><code>update(name=None, description=None)\n</code></pre> <p>Update a generator with specific parameters.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str | None</code> <p>The name of the generator.</p> <code>None</code> <code>description</code> <code>str | None</code> <p>The description of the generator.</p> <code>None</code>"},{"location":"api_client/#synthetic-datasets","title":"Synthetic Datasets","text":""},{"location":"api_client/#mostlyai.sdk.client.synthetic_datasets._MostlySyntheticDatasetsClient.create","title":"mostlyai.sdk.client.synthetic_datasets._MostlySyntheticDatasetsClient.create","text":"<pre><code>create(config)\n</code></pre> <p>Create a synthetic dataset. The synthetic dataset will be in the NEW state and will need to be generated before it can be used.</p> <p>See <code>mostly.generate</code> for more details.</p> <p>Parameters:</p> Name Type Description Default <code>config</code> <code>SyntheticDatasetConfig | dict[str, Any]</code> <p>Configuration for the synthetic dataset.</p> required <p>Returns:</p> Type Description <code>SyntheticDataset</code> <p>The created synthetic dataset object.</p> Example for creating a synthetic dataset <pre><code>from mostlyai.sdk import MostlyAI\nmostly = MostlyAI()\nsd = mostly.synthetic_datasets.create(\n    config=SyntheticDatasetConfig(\n        generator_id=\"INSERT_YOUR_GENERATOR_ID\",\n    )\n)\nprint(\"status:\", sd.generation_status)\n# status: NEW\nsd.generation.start()  # start generation\nprint(\"status:\", sd.generation_status)\n# status: QUEUED\nsd.generation.wait()   # wait for generation to complete\nprint(\"status:\", sd.generation_status)\n# status: DONE\n</code></pre>"},{"location":"api_client/#mostlyai.sdk.client.synthetic_datasets._MostlySyntheticDatasetsClient.get","title":"mostlyai.sdk.client.synthetic_datasets._MostlySyntheticDatasetsClient.get","text":"<pre><code>get(synthetic_dataset_id)\n</code></pre> <p>Retrieve a synthetic dataset by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>synthetic_dataset_id</code> <code>str</code> <p>The unique identifier of the synthetic dataset.</p> required <p>Returns:</p> Name Type Description <code>SyntheticDataset</code> <code>SyntheticDataset</code> <p>The retrieved synthetic dataset object.</p> Example for retrieving a synthetic dataset <pre><code>from mostlyai.sdk import MostlyAI\nmostly = MostlyAI()\nsd = mostly.synthetic_datasets.get('INSERT_YOUR_SYNTHETIC_DATASET_ID')\nsd\n</code></pre>"},{"location":"api_client/#mostlyai.sdk.client.synthetic_datasets._MostlySyntheticDatasetsClient.list","title":"mostlyai.sdk.client.synthetic_datasets._MostlySyntheticDatasetsClient.list","text":"<pre><code>list(\n    offset=0,\n    limit=None,\n    status=None,\n    search_term=None,\n    owner_id=None,\n    visibility=None,\n    created_from=None,\n    created_to=None,\n    sort_by=None,\n)\n</code></pre> <p>List synthetic datasets.</p> <p>Paginate through all synthetic datasets accessible by the user.</p> <p>Parameters:</p> Name Type Description Default <code>offset</code> <code>int</code> <p>Offset for the entities in the response.</p> <code>0</code> <code>limit</code> <code>int | None</code> <p>Limit for the number of entities in the response.</p> <code>None</code> <code>status</code> <code>str | list[str] | None</code> <p>Filter by generation status.</p> <code>None</code> <code>search_term</code> <code>str | None</code> <p>Filter by name or description.</p> <code>None</code> <code>owner_id</code> <code>str | list[str] | None</code> <p>Filter by owner ID.</p> <code>None</code> <code>visibility</code> <code>str | list[str] | None</code> <p>Filter by visibility (e.g., PUBLIC, PRIVATE or UNLISTED).</p> <code>None</code> <code>created_from</code> <code>str | None</code> <p>Filter by creation date, not older than this date. Format: YYYY-MM-DD.</p> <code>None</code> <code>created_to</code> <code>str | None</code> <p>Filter by creation date, not younger than this date. Format: YYYY-MM-DD.</p> <code>None</code> <code>sort_by</code> <code>str | list[str] | None</code> <p>Sort by field. Either NO_OF_THREADS, NO_OF_LIKES, RECENCY, or NO_OF_DOWNLOADS.</p> <code>None</code> <p>Returns:</p> Type Description <code>Iterator[SyntheticDatasetListItem]</code> <p>An iterator over synthetic datasets.</p> Example for listing all synthetic datasets <pre><code>from mostlyai.sdk import MostlyAI\nmostly = MostlyAI()\nfor sd in mostly.synthetic_datasets.list():\n    print(f\"Synthetic Dataset `{sd.name}` ({sd.generation_status}, {sd.id})\")\n</code></pre> Example for searching generated synthetic datasets via key word <pre><code>from mostlyai.sdk import MostlyAI\nmostly = MostlyAI()\ndatasets = list(mostly.synthetic_datasets.list(search_term=\"census\", status=\"DONE\"))\nprint(f\"Found {len(datasets)} synthetic datasets\")\n</code></pre>"},{"location":"api_client/#synthetic-dataset","title":"Synthetic Dataset","text":"<p>A synthetic dataset is created based on a trained generator.</p> <p>It consists of synthetic samples, as well as a quality assurance report.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The unique identifier of a synthetic dataset.</p> required <code>generator_id</code> <code>str | None</code> <p>The unique identifier of a generator.</p> <code>None</code> <code>metadata</code> <code>Metadata | None</code> <code>None</code> <code>name</code> <code>str</code> <p>The name of a synthetic dataset.</p> required <code>description</code> <code>str | None</code> <p>The description of a synthetic dataset.</p> <code>None</code> <code>generation_status</code> <code>ProgressStatus</code> required <code>generation_time</code> <code>AwareDatetime | None</code> <p>The UTC date and time when the generation has finished.</p> <code>None</code> <code>tables</code> <code>list[SyntheticTable] | None</code> <p>The tables of this synthetic dataset.</p> <code>None</code> <code>delivery</code> <code>SyntheticDatasetDelivery | None</code> <code>None</code> <code>accuracy</code> <code>float | None</code> <p>The overall accuracy of the trained generator. This is the average of the overall accuracy scores of all trained models.</p> <code>None</code> <code>usage</code> <code>SyntheticDatasetUsage | None</code> <code>None</code> <code>compute</code> <code>str | None</code> <p>The unique identifier of a compute resource. Not applicable for SDK.</p> <code>None</code> <code>random_state</code> <code>int | None</code> <p>Seed for the random number generators. If None, the random number generator is initialized randomly, yielding different results for every run. Setting it to a specific integer ensures reproducible results across runs. Useful when consistent results are desired, e.g. for testing or debugging.</p> <code>None</code> <code>generation</code> <code>Any | None</code> <code>None</code>"},{"location":"api_client/#mostlyai.sdk.domain.SyntheticDataset.Generation","title":"mostlyai.sdk.domain.SyntheticDataset.Generation","text":""},{"location":"api_client/#mostlyai.sdk.domain.SyntheticDataset.Generation.cancel","title":"mostlyai.sdk.domain.SyntheticDataset.Generation.cancel","text":"<pre><code>cancel()\n</code></pre> <p>Cancel the generation process.</p>"},{"location":"api_client/#mostlyai.sdk.domain.SyntheticDataset.Generation.logs","title":"mostlyai.sdk.domain.SyntheticDataset.Generation.logs","text":"<pre><code>logs(file_path=None)\n</code></pre> <p>Download the generation logs and save to file.</p> <p>Parameters:</p> Name Type Description Default <code>file_path</code> <code>str | Path | None</code> <p>The file path to save the logs. Default is the current working directory.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>Path</code> <code>Path</code> <p>The path to the saved file.</p>"},{"location":"api_client/#mostlyai.sdk.domain.SyntheticDataset.Generation.progress","title":"mostlyai.sdk.domain.SyntheticDataset.Generation.progress","text":"<pre><code>progress()\n</code></pre> <p>Retrieve the progress of the generation process.</p> <p>Returns:</p> Name Type Description <code>JobProgress</code> <code>JobProgress</code> <p>The progress of the generation process.</p>"},{"location":"api_client/#mostlyai.sdk.domain.SyntheticDataset.Generation.start","title":"mostlyai.sdk.domain.SyntheticDataset.Generation.start","text":"<pre><code>start()\n</code></pre> <p>Start the generation process.</p>"},{"location":"api_client/#mostlyai.sdk.domain.SyntheticDataset.Generation.wait","title":"mostlyai.sdk.domain.SyntheticDataset.Generation.wait","text":"<pre><code>wait(progress_bar=True, interval=2)\n</code></pre> <p>Poll the generation progress and wait until the process is complete.</p> <p>Parameters:</p> Name Type Description Default <code>progress_bar</code> <code>bool</code> <p>If true, displays a progress bar. Default is True.</p> <code>True</code> <code>interval</code> <code>float</code> <p>Interval in seconds to poll the job progress. Default is 2 seconds.</p> <code>2</code>"},{"location":"api_client/#mostlyai.sdk.domain.SyntheticDataset.config","title":"mostlyai.sdk.domain.SyntheticDataset.config","text":"<pre><code>config()\n</code></pre> <p>Retrieve writable synthetic dataset properties.</p> <p>Returns:</p> Name Type Description <code>SyntheticDatasetConfig</code> <code>SyntheticDatasetConfig</code> <p>The synthetic dataset properties as a configuration object.</p>"},{"location":"api_client/#mostlyai.sdk.domain.SyntheticDataset.data","title":"mostlyai.sdk.domain.SyntheticDataset.data","text":"<pre><code>data(return_type='auto')\n</code></pre> <p>Download synthetic dataset and return as dictionary of pandas DataFrames.</p> <p>Parameters:</p> Name Type Description Default <code>return_type</code> <code>Literal['auto', 'dict']</code> <p>The type of the return value. \"dict\" will always provide a dictionary of DataFrames. \"auto\" will return a single DataFrame for a single-table generator, and a dictionary of DataFrames for a multi-table generator. Default is \"auto\".</p> <code>'auto'</code> <p>Returns:</p> Type Description <code>DataFrame | dict[str, DataFrame]</code> <p>Union[pd.DataFrame, dict[str, pd.DataFrame]]: The synthetic dataset. See return_type for the format of the return value.</p>"},{"location":"api_client/#mostlyai.sdk.domain.SyntheticDataset.delete","title":"mostlyai.sdk.domain.SyntheticDataset.delete","text":"<pre><code>delete()\n</code></pre> <p>Delete the synthetic dataset.</p>"},{"location":"api_client/#mostlyai.sdk.domain.SyntheticDataset.download","title":"mostlyai.sdk.domain.SyntheticDataset.download","text":"<pre><code>download(file_path=None, format='parquet')\n</code></pre> <p>Download synthetic dataset and save to file.</p> <p>Parameters:</p> Name Type Description Default <code>file_path</code> <code>str | Path | None</code> <p>The file path to save the synthetic dataset.</p> <code>None</code> <code>format</code> <code>Literal['parquet', 'csv', 'json']</code> <p>The format of the synthetic dataset. Default is \"parquet\".</p> <code>'parquet'</code> <p>Returns:</p> Name Type Description <code>Path</code> <code>Path</code> <p>The path to the saved file.</p>"},{"location":"api_client/#mostlyai.sdk.domain.SyntheticDataset.reports","title":"mostlyai.sdk.domain.SyntheticDataset.reports","text":"<pre><code>reports(file_path=None, display=False)\n</code></pre> <p>Download or display the quality assurance reports.</p> <p>If display is True, the report is rendered inline via IPython display and no file is downloaded. Otherwise, the report is downloaded and saved to file_path (or a default location if None).</p> <p>Note that reports are not available for synthetic datasets that generated less than 100 samples or had <code>enable_data_report</code> set to <code>False</code>.</p> <p>Parameters:</p> Name Type Description Default <code>file_path</code> <code>str | Path | None</code> <p>The file path to save the zipped reports (ignored if display=True).</p> <code>None</code> <code>display</code> <code>bool</code> <p>If True, render the report inline instead of downloading it.</p> <code>False</code> <p>Returns:</p> Type Description <code>Path | None</code> <p>Path | None: The path to the saved file if downloading, or None if display=True.</p>"},{"location":"api_client/#mostlyai.sdk.domain.SyntheticDataset.update","title":"mostlyai.sdk.domain.SyntheticDataset.update","text":"<pre><code>update(name=None, description=None, delivery=None)\n</code></pre> <p>Update a synthetic dataset with specific parameters.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str | None</code> <p>The name of the synthetic dataset.</p> <code>None</code> <code>description</code> <code>str | None</code> <p>The description of the synthetic dataset.</p> <code>None</code> <code>delivery</code> <code>SyntheticDatasetDelivery | None</code> <p>The delivery configuration for the synthetic dataset.</p> <code>None</code>"},{"location":"api_client/#connectors","title":"Connectors","text":""},{"location":"api_client/#mostlyai.sdk.client.connectors._MostlyConnectorsClient.create","title":"mostlyai.sdk.client.connectors._MostlyConnectorsClient.create","text":"<pre><code>create(config, test_connection=True)\n</code></pre> <p>Create a connector and optionally validate the connection before saving.</p> <p>See <code>mostly.connect</code> for more details.</p> <p>Parameters:</p> Name Type Description Default <code>config</code> <code>ConnectorConfig | dict[str, Any]</code> <p>Configuration for the connector.</p> required <code>test_connection</code> <code>bool | None</code> <p>Whether to test the connection before saving the connector</p> <code>True</code> <p>Returns:</p> Type Description <code>Connector</code> <p>The created connector object.</p>"},{"location":"api_client/#mostlyai.sdk.client.connectors._MostlyConnectorsClient.get","title":"mostlyai.sdk.client.connectors._MostlyConnectorsClient.get","text":"<pre><code>get(connector_id)\n</code></pre> <p>Retrieve a connector by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>connector_id</code> <code>str</code> <p>The unique identifier of the connector.</p> required <p>Returns:</p> Name Type Description <code>Connector</code> <code>Connector</code> <p>The retrieved connector object.</p> Example for retrieving a connector <pre><code>from mostlyai.sdk import MostlyAI\nmostly = MostlyAI()\nc = mostly.connectors.get('INSERT_YOUR_CONNECTOR_ID')\nc\n</code></pre>"},{"location":"api_client/#mostlyai.sdk.client.connectors._MostlyConnectorsClient.list","title":"mostlyai.sdk.client.connectors._MostlyConnectorsClient.list","text":"<pre><code>list(\n    offset=0,\n    limit=None,\n    search_term=None,\n    access_type=None,\n    owner_id=None,\n    visibility=None,\n    created_from=None,\n    created_to=None,\n    sort_by=None,\n)\n</code></pre> <p>List connectors.</p> <p>Paginate through all connectors accessible by the user. Only connectors that are independent of a table will be returned.</p> Example for listing all connectors <pre><code>from mostlyai.sdk import MostlyAI\nmostly = MostlyAI()\nfor c in mostly.connectors.list():\n    print(f\"Connector `{c.name}` ({c.access_type}, {c.type}, {c.id})\")\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>offset</code> <code>int</code> <p>Offset for entities in the response.</p> <code>0</code> <code>limit</code> <code>int | None</code> <p>Limit for the number of entities in the response.</p> <code>None</code> <code>search_term</code> <code>str | None</code> <p>Filter by search term in the name and description.</p> <code>None</code> <code>access_type</code> <code>str | None</code> <p>Filter by access type (e.g., READ_PROTECTED, READ_DATA or WRITE_DATA).</p> <code>None</code> <code>owner_id</code> <code>str | list[str] | None</code> <p>Filter by owner ID.</p> <code>None</code> <code>visibility</code> <code>str | list[str] | None</code> <p>Filter by visibility (e.g., PUBLIC, PRIVATE or UNLISTED).</p> <code>None</code> <code>created_from</code> <code>str | None</code> <p>Filter by creation date, not older than this date. Format: YYYY-MM-DD.</p> <code>None</code> <code>created_to</code> <code>str | None</code> <p>Filter by creation date, not younger than this date. Format: YYYY-MM-DD.</p> <code>None</code> <code>sort_by</code> <code>str | list[str] | None</code> <p>Sort by field. Either NO_OF_THREADS, NO_OF_LIKES, RECENCY or NO_OF_GENERATORS.</p> <code>None</code> <p>Returns:</p> Type Description <code>Iterator[ConnectorListItem]</code> <p>Iterator[ConnectorListItem]: An iterator over connector list items.</p>"},{"location":"api_client/#connector","title":"Connector","text":"<p>A connector is a connection to a data source or a data destination.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The unique identifier of a connector.</p> required <code>name</code> <code>str | None</code> <p>The name of a connector.</p> <code>None</code> <code>description</code> <code>str | None</code> <p>The description of a connector.</p> <code>None</code> <code>type</code> <code>ConnectorType</code> required <code>access_type</code> <code>ConnectorAccessType | None</code> <code>&lt;ConnectorAccessType.read_protected: 'READ_PROTECTED'&gt;</code> <code>config</code> <code>dict[str, Any] | None</code> <code>None</code> <code>secrets</code> <code>dict[str, str] | None</code> <code>None</code> <code>ssl</code> <code>dict[str, str] | None</code> <code>None</code> <code>metadata</code> <code>Metadata | None</code> <code>None</code> <code>usage</code> <code>ConnectorUsage | None</code> <code>None</code> <code>table_id</code> <code>str | None</code> <p>Optional. ID of a source table or a synthetic table, that this connector belongs to. If not set, then this connector is managed independently of any generator or synthetic dataset.</p> <code>None</code>"},{"location":"api_client/#mostlyai.sdk.domain.Connector.delete","title":"mostlyai.sdk.domain.Connector.delete","text":"<pre><code>delete()\n</code></pre> <p>Delete the connector.</p>"},{"location":"api_client/#mostlyai.sdk.domain.Connector.delete_data","title":"mostlyai.sdk.domain.Connector.delete_data","text":"<pre><code>delete_data(location)\n</code></pre> <p>Delete data from the specified location within the connector. This method is only available for connectors of access_type WRITE_DATA.</p> <p>Parameters:</p> Name Type Description Default <code>location</code> <code>str</code> <p>The target location within the connector to delete data from.</p> required Example <pre><code>c.delete_data('db_name.table_name')  # drop table data from 'table_name' in 'db_name' for a DB connector\nc.delete_data('s3://my_bucket/path/to/file.csv')  # delete data from 'file.csv' in 'my_bucket' for a S3 storage connector\n</code></pre>"},{"location":"api_client/#mostlyai.sdk.domain.Connector.locations","title":"mostlyai.sdk.domain.Connector.locations","text":"<pre><code>locations(prefix='')\n</code></pre> <p>List connector locations.</p> <p>List the available databases, schemas, tables, or folders for a connector. For storage connectors, this returns list of buckets for empty prefix and otherwise the folders and files then within a path, specified via prefix. For DB connectors, this returns list of schemas (or databases for DBs without schema), respectively list of tables if <code>prefix</code> is provided.</p> <p>The formats of the locations are:</p> <ul> <li>Cloud storage:<ul> <li><code>AZURE_STORAGE</code>: <code>container/path</code></li> <li><code>GOOGLE_CLOUD_STORAGE</code>: <code>bucket/path</code></li> <li><code>S3_STORAGE</code>: <code>bucket/path</code></li> </ul> </li> <li>Database:<ul> <li><code>BIGQUERY</code>: <code>dataset.table</code></li> <li><code>DATABRICKS</code>: <code>schema.table</code></li> <li><code>HIVE</code>: <code>database.table</code></li> <li><code>MARIADB</code>: <code>database.table</code></li> <li><code>MSSQL</code>: <code>schema.table</code></li> <li><code>MYSQL</code>: <code>database.table</code></li> <li><code>ORACLE</code>: <code>schema.table</code></li> <li><code>POSTGRES</code>: <code>schema.table</code></li> <li><code>SNOWFLAKE</code>: <code>schema.table</code></li> </ul> </li> </ul> <p>Parameters:</p> Name Type Description Default <code>prefix</code> <code>str</code> <p>The prefix to filter the results by. Defaults to an empty string.</p> <code>''</code> <p>Returns:</p> Type Description <code>list[str]</code> <p>list[str]: A list of locations (schemas, databases, directories, etc.).</p> Example <pre><code>c.locations()  # list all schemas / databases for a DB connector; list all buckets for a storage connector\nc.locations('db_name')  # list all tables in 'db_name' for a DB connector\nc.locations('s3://my_bucket')  # list all objects in 'my_bucket' for a S3 storage connector\nc.locations('gs://my_bucket/path/to/folder')  # list all objects in 'my_bucket/path/to/folder' for a GCP storage connector\nc.locations('az://my_container/path/to/folder')  # list all objects in 'my_container/path/to/folder' for a AZURE storage connector\n</code></pre>"},{"location":"api_client/#mostlyai.sdk.domain.Connector.query","title":"mostlyai.sdk.domain.Connector.query","text":"<pre><code>query(sql)\n</code></pre> <p>Execute a read-only SQL query against the connector's data source.</p> <p>Queries can include statements like SELECT, SHOW, or DESCRIBE, but must not modify data or state. For file-based connectors (S3_STORAGE, GOOGLE_CLOUD_STORAGE, AZURE_STORAGE) queries are executed using DuckDB. Use connector-type-specific prefixes. See examples.</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>The SQL query to execute.</p> required <p>Returns:</p> Type Description <code>DataFrame</code> <p>pd.DataFrame: The result of the query as a Pandas DataFrame.</p> Example <pre><code>df = c.query(\"SELECT count(*) FROM schema.table\")  # for DB connectors\ndf = c.query(\"SELECT count(*) FROM read_csv_auto('s3://bucket/path/to/file.csv')\")  # query a single CSV file from S3 storage\ndf = c.query(\"SELECT count(*) FROM read_parquet('gs://bucket/path/to/folder/*.parquet')\")  # query a folder with PQT files from GCP storage\ndf = c.query(\"SELECT count(*) FROM read_json('az://bucket/path/to/file.json')\")  # query a single JSON file from AZURE storage\n</code></pre>"},{"location":"api_client/#mostlyai.sdk.domain.Connector.read_data","title":"mostlyai.sdk.domain.Connector.read_data","text":"<pre><code>read_data(location, limit=None, shuffle=False)\n</code></pre> <p>Retrieve data from the specified location within the connector. This method is only available for connectors of access_type READ_DATA or WRITE_DATA.</p> <p>Parameters:</p> Name Type Description Default <code>location</code> <code>str</code> <p>The target location within the connector to read data from.</p> required <code>limit</code> <code>int | None</code> <p>The maximum number of rows to return. Returns all if not specified.</p> <code>None</code> <code>shuffle</code> <code>bool | None</code> <p>Whether to shuffle the results.</p> <code>False</code> <p>Returns:</p> Type Description <code>DataFrame</code> <p>pd.DataFrame: A DataFrame containing the retrieved data.</p> Example <pre><code>df = c.read_data('db_name.table_name', limit=100)  # fetch first 100 rows from 'table_name' in 'db_name' for a DB connector\ndf = c.read_data('s3://my_bucket/path/to/file.csv')  # read all data from 'file.csv' in 'my_bucket' for a S3 storage connector\n</code></pre>"},{"location":"api_client/#mostlyai.sdk.domain.Connector.schema","title":"mostlyai.sdk.domain.Connector.schema","text":"<pre><code>schema(location)\n</code></pre> <p>Retrieve the schema of the table at a connector location. This method is available for all connectors.</p> <p>Parameters:</p> Name Type Description Default <code>location</code> <code>str</code> <p>The location of the table.</p> required <p>Returns:</p> Type Description <code>list[dict[str, Any]]</code> <p>list[dict[str, Any]]: The retrieved schema.</p> Example <pre><code>c.schema('db_name.table_name')  # get the schema of 'table_name' in 'db_name' for a DB connector\nc.schema('s3://my_bucket/path/to/file.csv')  # get the schema of 'file.csv' in 'my_bucket' for a S3 storage connector\n</code></pre>"},{"location":"api_client/#mostlyai.sdk.domain.Connector.update","title":"mostlyai.sdk.domain.Connector.update","text":"<pre><code>update(\n    name=None,\n    description=None,\n    access_type=None,\n    config=None,\n    secrets=None,\n    ssl=None,\n    test_connection=True,\n)\n</code></pre> <p>Update a connector with specific parameters.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str | None</code> <p>The name of the connector.</p> <code>None</code> <code>description</code> <code>str | None</code> <p>The description of the connector.</p> <code>None</code> <code>access_type</code> <code>ConnectorAccessType | None</code> <p>The access type of the connector.</p> <code>None</code> <code>config</code> <code>dict[str, Any] | None</code> <p>Connector configuration.</p> <code>None</code> <code>secrets</code> <code>dict[str, str] | None</code> <p>Secret values for the connector.</p> <code>None</code> <code>ssl</code> <code>dict[str, str] | None</code> <p>SSL configuration for the connector.</p> <code>None</code> <code>test_connection</code> <code>bool | None</code> <p>If true, validates the connection before saving.</p> <code>True</code>"},{"location":"api_client/#mostlyai.sdk.domain.Connector.write_data","title":"mostlyai.sdk.domain.Connector.write_data","text":"<pre><code>write_data(data, location, if_exists='fail')\n</code></pre> <p>Write data to the specified location within the connector. This method is only available for connectors of access_type WRITE_DATA.</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>DataFrame | None</code> <p>The DataFrame to write, or None to delete the location.</p> required <code>location</code> <code>str</code> <p>The target location within the connector to write data to.</p> required <code>if_exists</code> <code>Literal['append', 'replace', 'fail']</code> <p>The behavior if the target location already exists (append, replace, fail). Default is \"fail\".</p> <code>'fail'</code> Example <pre><code>c.write_data(df, 'db_name.table_name', if_exists='fail')  # write data to 'table_name' in 'db_name' for a DB connector (if it doesn't exist)\nc.write_data(df, 's3://my_bucket/path/to/file.csv')  # write data to 'file.csv' in 'my_bucket' for a S3 storage connector\n</code></pre>"},{"location":"api_domain/","title":"Schema References for <code>mostlyai.sdk.domain</code>","text":"<p>This module is auto-generated to represent <code>pydantic</code>-based classes of the defined schema in the Public API.</p>"},{"location":"api_domain/#mostlyai.sdk.domain","title":"mostlyai.sdk.domain","text":""},{"location":"api_domain/#mostlyai.sdk.domain.AboutService","title":"AboutService","text":"<p>General information about the service.</p> <p>Parameters:</p> Name Type Description Default <code>version</code> <code>str | None</code> <p>The version number of the service.</p> <code>None</code> <code>assistant</code> <code>bool | None</code> <p>A flag indicating if the assistant is enabled.</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.AccountType","title":"AccountType","text":"<p>The type of account, either a user or an organization.</p>"},{"location":"api_domain/#mostlyai.sdk.domain.Accuracy","title":"Accuracy","text":"<p>Metrics regarding the accuracy of synthetic data, measured as the closeness of discretized lower dimensional marginal distributions.</p> <ol> <li>Univariate Accuracy: The accuracy of the univariate distributions for all target columns.</li> <li>Bivariate Accuracy: The accuracy of all pair-wise distributions for target columns, as well as for target columns with respect to the context columns.</li> <li>Trivariate Accuracy: The accuracy of all three-way distributions for target columns.</li> <li>Coherence Accuracy: The accuracy of the auto-correlation for all target columns.</li> </ol> <p>Accuracy is defined as 100% - Total Variation Distance (TVD), whereas TVD is half the sum of the absolute differences of the relative frequencies of the corresponding distributions.</p> <p>These accuracies are calculated for all discretized univariate, and bivariate distributions. In case of sequential data, also for all coherence distributions. Overall metrics are then calculated as the average across these accuracies.</p> <p>All metrics can be compared against a theoretical maximum accuracy, which is calculated for a same-sized holdout. The accuracy metrics shall be as close as possible to the theoretical maximum, but not significantly higher, as this would indicate overfitting.</p> <p>Parameters:</p> Name Type Description Default <code>overall</code> <code>float | None</code> <p>Overall accuracy of synthetic data, averaged across univariate, bivariate, and coherence.</p> <code>None</code> <code>univariate</code> <code>float | None</code> <p>Average accuracy of discretized univariate distributions.</p> <code>None</code> <code>bivariate</code> <code>float | None</code> <p>Average accuracy of discretized bivariate distributions.</p> <code>None</code> <code>trivariate</code> <code>float | None</code> <p>Average accuracy of discretized trivariate distributions.</p> <code>None</code> <code>coherence</code> <code>float | None</code> <p>Average accuracy of discretized coherence distributions. Only applicable for sequential data.</p> <code>None</code> <code>overall_max</code> <code>float | None</code> <p>Expected overall accuracy of a same-sized holdout. Serves as a reference for <code>overall</code>.</p> <code>None</code> <code>univariate_max</code> <code>float | None</code> <p>Expected univariate accuracy of a same-sized holdout. Serves as a reference for <code>univariate</code>.</p> <code>None</code> <code>bivariate_max</code> <code>float | None</code> <p>Expected bivariate accuracy of a same-sized holdout. Serves as a reference for <code>bivariate</code>.</p> <code>None</code> <code>trivariate_max</code> <code>float | None</code> <p>Expected trivariate accuracy of a same-sized holdout. Serves as a reference for <code>trivariate</code>.</p> <code>None</code> <code>coherence_max</code> <code>float | None</code> <p>Expected coherence accuracy of a same-sized holdout. Serves as a reference for <code>coherence</code>.</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.Artifact","title":"Artifact","text":"<p>A shareable artifact generated from an assistant conversation.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The unique identifier of an artifact.</p> required <code>name</code> <code>str</code> <p>The name/title of an artifact.</p> required <code>file_name</code> <code>str</code> <p>The filename of an artifact.</p> required <code>description</code> <code>str</code> <p>The description/prompt of an artifact that explains how to recreate it.</p> required <code>type</code> <code>ArtifactType | None</code> <code>None</code> <code>preview</code> <code>ArtifactPreview | None</code> <code>None</code> <code>download_url</code> <code>str</code> <p>URL to download the artifact.</p> required <code>shareable_url</code> <code>str</code> <p>Public URL where the artifact can be viewed and shared.</p> required <code>usage</code> <code>ArtifactUsage | None</code> <code>None</code> <code>metadata</code> <code>Metadata | None</code> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.Artifact.update","title":"update","text":"<pre><code>update(name=None, description=None)\n</code></pre> <p>Update the artifact.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str | None</code> <p>The name of the artifact.</p> <code>None</code> <code>description</code> <code>str | None</code> <p>The description of the artifact.</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.ArtifactConfig","title":"ArtifactConfig","text":"<p>Configuration for creating an artifact from an assistant message.</p> <p>Parameters:</p> Name Type Description Default <code>assistant_message_id</code> <code>str</code> <p>The unique identifier of a assistant message.</p> required"},{"location":"api_domain/#mostlyai.sdk.domain.ArtifactListItem","title":"ArtifactListItem","text":"<p>Essential artifact details for listings.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The unique identifier of an artifact.</p> required <code>name</code> <code>str</code> <p>The name/title of an artifact.</p> required <code>file_name</code> <code>str</code> <p>The filename of an artifact.</p> required <code>description</code> <code>str</code> <p>The description/prompt of an artifact that explains how to recreate it.</p> required <code>type</code> <code>ArtifactType | None</code> <code>None</code> <code>preview</code> <code>ArtifactPreview | None</code> <code>None</code> <code>download_url</code> <code>str</code> <p>URL to download the artifact.</p> required <code>shareable_url</code> <code>str</code> <p>Public URL where the artifact can be viewed and shared.</p> required <code>usage</code> <code>ArtifactUsage | None</code> <code>None</code> <code>metadata</code> <code>Metadata | None</code> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.ArtifactPreview","title":"ArtifactPreview","text":"<p>Preview information for an artifact.</p> <p>Parameters:</p> Name Type Description Default <code>image</code> <code>str | None</code> <p>URL to a preview image for the artifact.</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.ArtifactType","title":"ArtifactType","text":"<p>The type of artifact content.</p>"},{"location":"api_domain/#mostlyai.sdk.domain.ArtifactUsage","title":"ArtifactUsage","text":"<p>Usage statistics of an artifact.</p> <p>Parameters:</p> Name Type Description Default <code>no_of_threads</code> <code>int | None</code> <p>Number of assistant threads started from this artifact.</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.BillingCycle","title":"BillingCycle","text":"<p>The billing cycle of the subscription.</p> <p>Parameters:</p> Name Type Description Default <code>start_date</code> <code>AwareDatetime | None</code> <p>The UTC date and time when the billing cycle started.</p> <code>None</code> <code>end_date</code> <code>AwareDatetime | None</code> <p>The UTC date and time when the billing cycle ended.</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.BillingInfo","title":"BillingInfo","text":"<p>Billing information for an account.</p> <p>Parameters:</p> Name Type Description Default <code>customer_portal_uri</code> <code>AnyUrl</code> <p>The URL of the customer portal for managing billing and subscriptions.</p> required <code>billing_cycle</code> <code>BillingCycle</code> required <code>cancels_at</code> <code>AwareDatetime | None</code> <p>The UTC date and time when the subscription will be canceled.</p> <code>None</code> <code>current_plan</code> <code>Plan</code> required"},{"location":"api_domain/#mostlyai.sdk.domain.BillingInterval","title":"BillingInterval","text":"<p>The billing cycle for a plan.</p>"},{"location":"api_domain/#mostlyai.sdk.domain.Compute","title":"Compute","text":"<p>A compute resource for executing tasks.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str | None</code> <p>The unique identifier of a compute resource. Not applicable for SDK.</p> <code>None</code> <code>name</code> <code>str | None</code> <p>The name of a compute resource.</p> <code>None</code> <code>type</code> <code>Literal['KUBERNETES'] | None</code> <p>The type of compute.</p> <code>None</code> <code>config</code> <code>dict[str, Any] | None</code> <code>None</code> <code>secrets</code> <code>dict[str, Any] | None</code> <code>None</code> <code>resources</code> <code>ComputeResources | None</code> <code>None</code> <code>order_index</code> <code>int | None</code> <p>The index for determining the sort order when listing computes</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.ComputeConfig","title":"ComputeConfig","text":"<p>The configuration for creating a new compute resource.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str | None</code> <p>The name of a compute resource.</p> <code>None</code> <code>type</code> <code>Literal['KUBERNETES'] | None</code> <p>The type of compute.</p> <code>None</code> <code>resources</code> <code>ComputeResources | None</code> <code>None</code> <code>config</code> <code>dict[str, Any] | None</code> <code>None</code> <code>secrets</code> <code>dict[str, Any] | None</code> <code>None</code> <code>order_index</code> <code>int | None</code> <p>The index for determining the sort order when listing computes</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.ComputeListItem","title":"ComputeListItem","text":"<p>Essential compute details for listings.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str | None</code> <p>The unique identifier of a compute resource. Not applicable for SDK.</p> <code>None</code> <code>type</code> <code>Literal['KUBERNETES'] | None</code> <p>The type of compute.</p> <code>None</code> <code>name</code> <code>str | None</code> <p>The name of a compute resource.</p> <code>None</code> <code>resources</code> <code>ComputeResources | None</code> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.ComputeResources","title":"ComputeResources","text":"<p>A set of available hardware resources for a compute resource.</p> <p>Parameters:</p> Name Type Description Default <code>cpus</code> <code>int | None</code> <p>The number of CPU cores</p> <code>None</code> <code>memory</code> <code>float | None</code> <p>The amount of memory in GB</p> <code>None</code> <code>gpus</code> <code>int | None</code> <p>The number of GPUs</p> <code>0</code> <code>gpu_memory</code> <code>float | None</code> <p>The amount of GPU memory in GB</p> <code>0</code> <code>storage</code> <code>float | None</code> <p>Ephemeral storage in GiB (Kubernetes only)</p> <code>4</code>"},{"location":"api_domain/#mostlyai.sdk.domain.Connector","title":"Connector","text":"<p>A connector is a connection to a data source or a data destination.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The unique identifier of a connector.</p> required <code>name</code> <code>str | None</code> <p>The name of a connector.</p> <code>None</code> <code>description</code> <code>str | None</code> <p>The description of a connector.</p> <code>None</code> <code>type</code> <code>ConnectorType</code> required <code>access_type</code> <code>ConnectorAccessType | None</code> <code>&lt;ConnectorAccessType.read_protected: 'READ_PROTECTED'&gt;</code> <code>config</code> <code>dict[str, Any] | None</code> <code>None</code> <code>secrets</code> <code>dict[str, str] | None</code> <code>None</code> <code>ssl</code> <code>dict[str, str] | None</code> <code>None</code> <code>metadata</code> <code>Metadata | None</code> <code>None</code> <code>usage</code> <code>ConnectorUsage | None</code> <code>None</code> <code>table_id</code> <code>str | None</code> <p>Optional. ID of a source table or a synthetic table, that this connector belongs to. If not set, then this connector is managed independently of any generator or synthetic dataset.</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.Connector.delete","title":"delete","text":"<pre><code>delete()\n</code></pre> <p>Delete the connector.</p>"},{"location":"api_domain/#mostlyai.sdk.domain.Connector.delete_data","title":"delete_data","text":"<pre><code>delete_data(location)\n</code></pre> <p>Delete data from the specified location within the connector. This method is only available for connectors of access_type WRITE_DATA.</p> <p>Parameters:</p> Name Type Description Default <code>location</code> <code>str</code> <p>The target location within the connector to delete data from.</p> required Example <pre><code>c.delete_data('db_name.table_name')  # drop table data from 'table_name' in 'db_name' for a DB connector\nc.delete_data('s3://my_bucket/path/to/file.csv')  # delete data from 'file.csv' in 'my_bucket' for a S3 storage connector\n</code></pre>"},{"location":"api_domain/#mostlyai.sdk.domain.Connector.locations","title":"locations","text":"<pre><code>locations(prefix='')\n</code></pre> <p>List connector locations.</p> <p>List the available databases, schemas, tables, or folders for a connector. For storage connectors, this returns list of buckets for empty prefix and otherwise the folders and files then within a path, specified via prefix. For DB connectors, this returns list of schemas (or databases for DBs without schema), respectively list of tables if <code>prefix</code> is provided.</p> <p>The formats of the locations are:</p> <ul> <li>Cloud storage:<ul> <li><code>AZURE_STORAGE</code>: <code>container/path</code></li> <li><code>GOOGLE_CLOUD_STORAGE</code>: <code>bucket/path</code></li> <li><code>S3_STORAGE</code>: <code>bucket/path</code></li> </ul> </li> <li>Database:<ul> <li><code>BIGQUERY</code>: <code>dataset.table</code></li> <li><code>DATABRICKS</code>: <code>schema.table</code></li> <li><code>HIVE</code>: <code>database.table</code></li> <li><code>MARIADB</code>: <code>database.table</code></li> <li><code>MSSQL</code>: <code>schema.table</code></li> <li><code>MYSQL</code>: <code>database.table</code></li> <li><code>ORACLE</code>: <code>schema.table</code></li> <li><code>POSTGRES</code>: <code>schema.table</code></li> <li><code>SNOWFLAKE</code>: <code>schema.table</code></li> </ul> </li> </ul> <p>Parameters:</p> Name Type Description Default <code>prefix</code> <code>str</code> <p>The prefix to filter the results by. Defaults to an empty string.</p> <code>''</code> <p>Returns:</p> Type Description <code>list[str]</code> <p>list[str]: A list of locations (schemas, databases, directories, etc.).</p> Example <pre><code>c.locations()  # list all schemas / databases for a DB connector; list all buckets for a storage connector\nc.locations('db_name')  # list all tables in 'db_name' for a DB connector\nc.locations('s3://my_bucket')  # list all objects in 'my_bucket' for a S3 storage connector\nc.locations('gs://my_bucket/path/to/folder')  # list all objects in 'my_bucket/path/to/folder' for a GCP storage connector\nc.locations('az://my_container/path/to/folder')  # list all objects in 'my_container/path/to/folder' for a AZURE storage connector\n</code></pre>"},{"location":"api_domain/#mostlyai.sdk.domain.Connector.query","title":"query","text":"<pre><code>query(sql)\n</code></pre> <p>Execute a read-only SQL query against the connector's data source.</p> <p>Queries can include statements like SELECT, SHOW, or DESCRIBE, but must not modify data or state. For file-based connectors (S3_STORAGE, GOOGLE_CLOUD_STORAGE, AZURE_STORAGE) queries are executed using DuckDB. Use connector-type-specific prefixes. See examples.</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>The SQL query to execute.</p> required <p>Returns:</p> Type Description <code>DataFrame</code> <p>pd.DataFrame: The result of the query as a Pandas DataFrame.</p> Example <pre><code>df = c.query(\"SELECT count(*) FROM schema.table\")  # for DB connectors\ndf = c.query(\"SELECT count(*) FROM read_csv_auto('s3://bucket/path/to/file.csv')\")  # query a single CSV file from S3 storage\ndf = c.query(\"SELECT count(*) FROM read_parquet('gs://bucket/path/to/folder/*.parquet')\")  # query a folder with PQT files from GCP storage\ndf = c.query(\"SELECT count(*) FROM read_json('az://bucket/path/to/file.json')\")  # query a single JSON file from AZURE storage\n</code></pre>"},{"location":"api_domain/#mostlyai.sdk.domain.Connector.read_data","title":"read_data","text":"<pre><code>read_data(location, limit=None, shuffle=False)\n</code></pre> <p>Retrieve data from the specified location within the connector. This method is only available for connectors of access_type READ_DATA or WRITE_DATA.</p> <p>Parameters:</p> Name Type Description Default <code>location</code> <code>str</code> <p>The target location within the connector to read data from.</p> required <code>limit</code> <code>int | None</code> <p>The maximum number of rows to return. Returns all if not specified.</p> <code>None</code> <code>shuffle</code> <code>bool | None</code> <p>Whether to shuffle the results.</p> <code>False</code> <p>Returns:</p> Type Description <code>DataFrame</code> <p>pd.DataFrame: A DataFrame containing the retrieved data.</p> Example <pre><code>df = c.read_data('db_name.table_name', limit=100)  # fetch first 100 rows from 'table_name' in 'db_name' for a DB connector\ndf = c.read_data('s3://my_bucket/path/to/file.csv')  # read all data from 'file.csv' in 'my_bucket' for a S3 storage connector\n</code></pre>"},{"location":"api_domain/#mostlyai.sdk.domain.Connector.schema","title":"schema","text":"<pre><code>schema(location)\n</code></pre> <p>Retrieve the schema of the table at a connector location. This method is available for all connectors.</p> <p>Parameters:</p> Name Type Description Default <code>location</code> <code>str</code> <p>The location of the table.</p> required <p>Returns:</p> Type Description <code>list[dict[str, Any]]</code> <p>list[dict[str, Any]]: The retrieved schema.</p> Example <pre><code>c.schema('db_name.table_name')  # get the schema of 'table_name' in 'db_name' for a DB connector\nc.schema('s3://my_bucket/path/to/file.csv')  # get the schema of 'file.csv' in 'my_bucket' for a S3 storage connector\n</code></pre>"},{"location":"api_domain/#mostlyai.sdk.domain.Connector.update","title":"update","text":"<pre><code>update(\n    name=None,\n    description=None,\n    access_type=None,\n    config=None,\n    secrets=None,\n    ssl=None,\n    test_connection=True,\n)\n</code></pre> <p>Update a connector with specific parameters.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str | None</code> <p>The name of the connector.</p> <code>None</code> <code>description</code> <code>str | None</code> <p>The description of the connector.</p> <code>None</code> <code>access_type</code> <code>ConnectorAccessType | None</code> <p>The access type of the connector.</p> <code>None</code> <code>config</code> <code>dict[str, Any] | None</code> <p>Connector configuration.</p> <code>None</code> <code>secrets</code> <code>dict[str, str] | None</code> <p>Secret values for the connector.</p> <code>None</code> <code>ssl</code> <code>dict[str, str] | None</code> <p>SSL configuration for the connector.</p> <code>None</code> <code>test_connection</code> <code>bool | None</code> <p>If true, validates the connection before saving.</p> <code>True</code>"},{"location":"api_domain/#mostlyai.sdk.domain.Connector.write_data","title":"write_data","text":"<pre><code>write_data(data, location, if_exists='fail')\n</code></pre> <p>Write data to the specified location within the connector. This method is only available for connectors of access_type WRITE_DATA.</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>DataFrame | None</code> <p>The DataFrame to write, or None to delete the location.</p> required <code>location</code> <code>str</code> <p>The target location within the connector to write data to.</p> required <code>if_exists</code> <code>Literal['append', 'replace', 'fail']</code> <p>The behavior if the target location already exists (append, replace, fail). Default is \"fail\".</p> <code>'fail'</code> Example <pre><code>c.write_data(df, 'db_name.table_name', if_exists='fail')  # write data to 'table_name' in 'db_name' for a DB connector (if it doesn't exist)\nc.write_data(df, 's3://my_bucket/path/to/file.csv')  # write data to 'file.csv' in 'my_bucket' for a S3 storage connector\n</code></pre>"},{"location":"api_domain/#mostlyai.sdk.domain.ConnectorAccessType","title":"ConnectorAccessType","text":"<p>The access permissions of a connector.</p> <ul> <li><code>READ_PROTECTED</code>:  The connector is restricted to being used solely as a source for training a generator. Direct data access is not permitted, only schema access is available.</li> <li><code>READ_DATA</code>: This connector allows full read access. It can also be used as a source for training a generator.</li> <li><code>WRITE_DATA</code>: This connector allows full read and write access. It can be also used as a source for training a generator, as well as a destination for delivering a synthetic dataset.</li> <li><code>SOURCE</code>: DEPRECATED - equivalent to READ_PROTECTED</li> <li><code>DESTINATION</code>: DEPRECATED - equivalent to WRITE_DATA</li> </ul>"},{"location":"api_domain/#mostlyai.sdk.domain.ConnectorConfig","title":"ConnectorConfig","text":"<p>The structures of the config, secrets and ssl parameters depend on the connector type.</p> <ul> <li>Cloud storage:   <pre><code>- type: AZURE_STORAGE\n  config:\n    accountName: string\n    clientId: string (required for auth via service principal)\n    tenantId: string (required for auth via service principal)\n  secrets:\n    accountKey: string (required for regular auth)\n    clientSecret: string (required for auth via service principal)\n\n- type: GOOGLE_CLOUD_STORAGE\n  config:\n  secrets:\n    keyFile: string\n\n- type: S3_STORAGE\n  config:\n    accessKey: string\n    endpointUrl: string (only needed for S3-compatible storage services other than AWS)\n    sslEnabled: boolean, default: false\n  secrets:\n    secretKey: string\n  ssl:\n    caCertificate: base64-encoded string\n</code></pre></li> <li>Database:   <pre><code>- type: BIGQUERY\n  config:\n  secrets:\n    keyFile: string\n\n- type: DATABRICKS\n  config:\n    host: string\n    httpPath: string\n    catalog: string\n    clientId: string (required for auth via service principal)\n    tenantId: string (required for auth via service principal)\n  secrets:\n    accessToken: string (required for regular auth)\n    clientSecret: string (required for auth via service principal)\n\n- type: HIVE\n  config:\n    host: string\n    port: integer, default: 10000\n    username: string (required for regular auth)\n    kerberosEnabled: boolean, default: false\n    kerberosServicePrincipal: string (required if kerberosEnabled)\n    kerberosClientPrincipal: string (optional if kerberosEnabled)\n    kerberosKrb5Conf: string (required if kerberosEnabled)\n    sslEnabled: boolean, default: false\n  secrets:\n    password: string (required for regular auth)\n    kerberosKeytab: base64-encoded string (required if kerberosEnabled)\n  ssl:\n    caCertificate: base64-encoded string\n\n- type: MARIADB\n  config:\n    host: string\n    port: integer, default: 3306\n    username: string\n  secrets:\n    password: string\n\n- type: MSSQL\n  config:\n    host: string\n    port: integer, default: 1433\n    username: string\n    database: string\n  secrets:\n   password: string\n\n- type: MYSQL\n  config:\n    host: string\n    port: integer, default: 3306\n    username: string\n  secrets:\n    password: string\n\n- type: ORACLE\n  config:\n    host: string\n    port: integer, default: 1521\n    username: string\n    connectionType: enum {SID, SERVICE_NAME}, default: SID\n    database: string, default: ORCL\n  secrets:\n    password: string\n\n- type: POSTGRES\n  config:\n    host: string\n    port: integer, default: 5432\n    username: string\n    database: string\n    sslEnabled: boolean, default: false\n  secrets:\n    password: string\n  ssl:\n    rootCertificate: base64-encoded string\n    sslCertificate: base64-encoded string\n    sslCertificateKey: base64-encoded string\n\n- type: SNOWFLAKE\n  config:\n    account: string\n    username: string\n    warehouse: string, default: COMPUTE_WH\n    database: string\n  secrets:\n    password: string\n\n- type: REDSHIFT\n  config:\n    host: string\n    port: integer, default: 5439\n    username: string\n    database: string\n  secrets:\n    password: string\n\n- type: SQLITE\n  config:\n    database: string\n</code></pre></li> </ul> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str | None</code> <p>The name of a connector.</p> <code>None</code> <code>description</code> <code>str | None</code> <p>The description of a connector.</p> <code>None</code> <code>type</code> <code>ConnectorType</code> required <code>access_type</code> <code>ConnectorAccessType | None</code> <code>&lt;ConnectorAccessType.read_protected: 'READ_PROTECTED'&gt;</code> <code>config</code> <code>dict[str, Any] | None</code> <code>None</code> <code>secrets</code> <code>dict[str, str] | None</code> <code>None</code> <code>ssl</code> <code>dict[str, str] | None</code> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.ConnectorDeleteDataConfig","title":"ConnectorDeleteDataConfig","text":"<p>Configuration for deleting data from a connector.</p> <p>Parameters:</p> Name Type Description Default <code>location</code> <code>str</code> <p>Specifies the target within the connector to delete. The format of this parameter varies by connector type.</p> required"},{"location":"api_domain/#mostlyai.sdk.domain.ConnectorListItem","title":"ConnectorListItem","text":"<p>Essential connector details for listings.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The unique identifier of a connector.</p> required <code>name</code> <code>str | None</code> <p>The name of a connector.</p> <code>None</code> <code>description</code> <code>str | None</code> <p>The description of a connector.</p> <code>None</code> <code>type</code> <code>ConnectorType</code> required <code>access_type</code> <code>ConnectorAccessType | None</code> <code>&lt;ConnectorAccessType.read_protected: 'READ_PROTECTED'&gt;</code> <code>metadata</code> <code>Metadata | None</code> <code>None</code> <code>usage</code> <code>ConnectorUsage | None</code> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.ConnectorQueryConfig","title":"ConnectorQueryConfig","text":"<p>Attributes: sql (str): SQL read-only (e.g. SELECT) statement to execute.</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>SQL read-only (e.g. SELECT) statement to execute.</p> required"},{"location":"api_domain/#mostlyai.sdk.domain.ConnectorReadDataConfig","title":"ConnectorReadDataConfig","text":"<p>Configuration for reading data from a connector.</p> <p>Parameters:</p> Name Type Description Default <code>location</code> <code>str | None</code> <p>Specifies the target within the connector from which to retrieve the data. The format of this parameter varies by connector type.</p> <code>None</code> <code>limit</code> <code>int | None</code> <p>The maximum number of rows to return. Return all if not specified.</p> <code>None</code> <code>shuffle</code> <code>bool | None</code> <p>Whether to shuffle the results.</p> <code>False</code>"},{"location":"api_domain/#mostlyai.sdk.domain.ConnectorType","title":"ConnectorType","text":"<p>The type of a connector.</p> <p>The type determines the structure of the config, secrets and ssl parameters.</p> <ul> <li><code>MYSQL</code>: MySQL database</li> <li><code>POSTGRES</code>: PostgreSQL database</li> <li><code>MSSQL</code>: Microsoft SQL Server database</li> <li><code>ORACLE</code>: Oracle database</li> <li><code>MARIADB</code>: MariaDB database</li> <li><code>SNOWFLAKE</code>: Snowflake cloud data platform</li> <li><code>BIGQUERY</code>: Google BigQuery cloud data warehouse</li> <li><code>HIVE</code>: Apache Hive database</li> <li><code>DATABRICKS</code>: Databricks cloud data platform</li> <li><code>REDSHIFT</code>: Amazon Redshift cloud data warehouse</li> <li><code>SQLITE</code>: SQLite database</li> <li><code>AZURE_STORAGE</code>: Azure Blob Storage</li> <li><code>GOOGLE_CLOUD_STORAGE</code>: Google Cloud Storage</li> <li><code>S3_STORAGE</code>: Amazon S3 Storage</li> <li><code>FILE_UPLOAD</code>: File upload</li> </ul>"},{"location":"api_domain/#mostlyai.sdk.domain.ConnectorUsage","title":"ConnectorUsage","text":"<p>Usage statistics of a connector.</p> <p>Parameters:</p> Name Type Description Default <code>no_of_generators</code> <code>int | None</code> <p>Number of generators using this connector.</p> <code>None</code> <code>no_of_likes</code> <code>int | None</code> <p>Number of likes of this connector.</p> <code>None</code> <code>no_of_threads</code> <code>int | None</code> <p>Number of assistant threads using this connector.</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.ConnectorWriteDataConfig","title":"ConnectorWriteDataConfig","text":"<p>Configuration for writing data to a connector.</p> <p>Parameters:</p> Name Type Description Default <code>file</code> <code>bytes</code> <p>Binary Parquet file containing the data to write.</p> required <code>location</code> <code>str</code> <p>Specifies the target within the connector to which to write the data. The format of this parameter varies by connector type.</p> required <code>if_exists</code> <code>IfExists | None</code> <p>The behavior if the target location already exists.</p> <ul> <li><code>APPEND</code>: Append the data to the existing target.</li> <li><code>REPLACE</code>: Replace the existing target with the new data.</li> <li><code>FAIL</code>: Fail if the target already exists.</li> </ul> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.CreditType","title":"CreditType","text":"<p>Determines which type of credits to include in the usage report. - <code>FREE</code>: Filter usage reports for free credits (natural month cycle). - <code>PAID</code>: Filter usage reports for paid credits (billing cycle).</p>"},{"location":"api_domain/#mostlyai.sdk.domain.CurrentUser","title":"CurrentUser","text":"<p>Information on the current user.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str | None</code> <p>The unique identifier of a user.</p> <code>None</code> <code>name</code> <code>str | None</code> <p>The name of a user. Contains only alphanumeric characters, hyphens, and underscores. Must start or end with alphanumeric. It must be globally case-insensitive unique considering organizations and users.</p> <code>None</code> <code>first_name</code> <code>str | None</code> <p>First name of a user</p> <code>None</code> <code>last_name</code> <code>str | None</code> <p>Last name of a user</p> <code>None</code> <code>email</code> <code>str | None</code> <p>The email of a user</p> <code>None</code> <code>avatar</code> <code>str | None</code> <p>The URL of the user's avatar</p> <code>None</code> <code>settings</code> <code>dict[str, Any] | None</code> <code>None</code> <code>usage</code> <code>UserUsage | None</code> <code>None</code> <code>unread_notifications</code> <code>int | None</code> <p>Number of unread notifications for the user</p> <code>None</code> <code>plan</code> <code>UserPlan | None</code> <code>None</code> <code>organizations</code> <code>list[OrganizationListItem] | None</code> <p>The organizations the user belongs to</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.Dataset","title":"Dataset","text":"<p>A dataset to be consumed via the assistant.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The unique identifier of a dataset.</p> required <code>name</code> <code>str</code> <p>The name of a dataset.</p> required <code>description</code> <code>str | None</code> <p>The description of / instructions for a dataset.</p> <code>None</code> <code>connectors</code> <code>list[DatasetConnector] | None</code> <code>None</code> <code>files</code> <code>list[str] | None</code> <code>None</code> <code>usage</code> <code>DatasetUsage | None</code> <code>None</code> <code>metadata</code> <code>Metadata | None</code> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.Dataset.delete","title":"delete","text":"<pre><code>delete()\n</code></pre> <p>Delete the dataset.</p>"},{"location":"api_domain/#mostlyai.sdk.domain.Dataset.delete_file","title":"delete_file","text":"<pre><code>delete_file(file_path)\n</code></pre> <p>Delete the dataset file.</p>"},{"location":"api_domain/#mostlyai.sdk.domain.Dataset.download_file","title":"download_file","text":"<pre><code>download_file(dataset_file_path, output_file_path=None)\n</code></pre> <p>Download the dataset file.</p> <p>Parameters:</p> Name Type Description Default <code>file_path</code> <code>str | Path | None</code> <p>The file path to save the dataset file.</p> required <p>Returns:</p> Name Type Description <code>Path</code> <code>Path</code> <p>The path to the saved file.</p>"},{"location":"api_domain/#mostlyai.sdk.domain.Dataset.update","title":"update","text":"<pre><code>update(name=None, description=None, connectors=None)\n</code></pre> <p>Update a dataset with specific parameters.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str | None</code> <p>The name of the connector.</p> <code>None</code> <code>description</code> <code>str | None</code> <p>The description of the connector.</p> <code>None</code> <code>connectors</code> <code>list[DatasetConnector] | None</code> <p>The connectors of the dataset.</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.Dataset.upload_file","title":"upload_file","text":"<pre><code>upload_file(file_path)\n</code></pre> <p>Upload the dataset file.</p>"},{"location":"api_domain/#mostlyai.sdk.domain.DatasetConfig","title":"DatasetConfig","text":"<p>The configuration for creating a dataset.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str | None</code> <p>The name of a dataset.</p> <code>None</code> <code>description</code> <code>str | None</code> <p>The description of / instructions for a dataset.</p> <code>None</code> <code>connectors</code> <code>list[DatasetConnectorConfig] | None</code> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.DatasetConnector","title":"DatasetConnector","text":"<p>Configuration for a dataset connector.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str | None</code> <p>The unique identifier of a connector.</p> <code>None</code> <code>name</code> <code>str | None</code> <p>The name of a connector.</p> <code>None</code> <code>description</code> <code>str | None</code> <p>The description of a connector.</p> <code>None</code> <code>type</code> <code>ConnectorType | None</code> <code>None</code> <code>access_type</code> <code>ConnectorAccessType | None</code> <code>&lt;ConnectorAccessType.read_protected: 'READ_PROTECTED'&gt;</code> <code>metadata</code> <code>Metadata | None</code> <code>None</code> <code>usage</code> <code>ConnectorUsage | None</code> <code>None</code> <code>locations</code> <code>list[str] | None</code> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.DatasetConnectorConfig","title":"DatasetConnectorConfig","text":"<p>Configuration for a dataset connector.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The unique identifier of a connector.</p> required <code>locations</code> <code>list[str] | None</code> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.DatasetConnectorLocationsConfig","title":"DatasetConnectorLocationsConfig","text":"<p>Configuration for adding connector to dataset.</p> <p>Parameters:</p> Name Type Description Default <code>locations</code> <code>list[str] | None</code> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.DatasetListItem","title":"DatasetListItem","text":"<p>Essential dataset details for listings.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The unique identifier of a dataset.</p> required <code>name</code> <code>str</code> <p>The name of a dataset.</p> required <code>description</code> <code>str | None</code> <p>The description of / instructions for a dataset.</p> <code>None</code> <code>usage</code> <code>DatasetUsage | None</code> <code>None</code> <code>metadata</code> <code>Metadata | None</code> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.DatasetUsage","title":"DatasetUsage","text":"<p>Usage statistics of a dataset.</p> <p>Parameters:</p> Name Type Description Default <code>no_of_likes</code> <code>int | None</code> <p>Number of likes of this dataset.</p> <code>None</code> <code>no_of_threads</code> <code>int | None</code> <p>Number of assistant threads using this dataset.</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.DifferentialPrivacyConfig","title":"DifferentialPrivacyConfig","text":"<p>The optional differential privacy configuration for training the model. If not provided, then no differential privacy will be applied.</p> <p>Parameters:</p> Name Type Description Default <code>max_epsilon</code> <code>float | None</code> <p>Specifies the maximum allowable epsilon value. If the training process exceeds this threshold, it will be terminated early. Only model checkpoints with epsilon values below this limit will be retained. If not provided, the training will proceed without early termination based on epsilon constraints.</p> <code>10.0</code> <code>delta</code> <code>float | None</code> <p>The delta value for differential privacy. It is the probability of the privacy guarantee not holding. The smaller the delta, the more confident you can be that the privacy guarantee holds. This delta will be equally distributed between the analysis and the training phase.</p> <code>'1e-5'</code> <code>noise_multiplier</code> <code>float | None</code> <p>Determines how much noise while training the model with differential privacy. This is the ratio of the standard deviation of the Gaussian noise to the L2-sensitivity of the function to which the noise is added.</p> <code>1.5</code> <code>max_grad_norm</code> <code>float | None</code> <p>Determines the maximum impact of a single sample on updating the model weights during training with differential privacy. This is the maximum norm of the per-sample gradients.</p> <code>1.0</code> <code>value_protection_epsilon</code> <code>float | None</code> <p>The DP epsilon of the privacy budget for determining the value ranges, which are gathered prior to the model training during the analysis step. Only applicable if value protection is True. Privacy budget will be equally distributed between the columns. For categorical we calculate noisy histograms and use a noisy threshold. For numeric and datetime we calculate bounds based on noisy histograms.</p> <code>1.0</code>"},{"location":"api_domain/#mostlyai.sdk.domain.Distances","title":"Distances","text":"<p>Metrics regarding the nearest neighbor distances between training, holdout, and synthetic samples in an numerically encoded space. Useful for assessing the novelty / privacy of synthetic data.</p> <p>The provided data is first down-sampled, so that the number of samples match across all datasets. Note, that for an optimal sensitivity of this privacy assessment it is recommended to use a 50/50 split between training and holdout data, and then generate synthetic data of the same size.</p> <p>The numerical encodings of these samples are then computed, and the nearest neighbor distances are calculated for each synthetic sample to the training and holdout samples. Based on these nearest neighbor distances the following metrics are calculated: - Identical Match Share (IMS): The share of synthetic samples that are identical to a training or holdout sample. - Distance to Closest Record (DCR): The average distance of synthetic to training or holdout samples. - Nearest Neighbor Distance Ratio (NNDR): The 10-th smallest ratio of the distance to nearest and second nearest neighbor.</p> <p>For privacy-safe synthetic data we expect to see about as many identical matches, and about the same distances for synthetic samples to training, as we see for synthetic samples to holdout.</p> <p>Parameters:</p> Name Type Description Default <code>ims_training</code> <code>float | None</code> <p>Share of synthetic samples that are identical to a training sample.</p> <code>None</code> <code>ims_holdout</code> <code>float | None</code> <p>Share of synthetic samples that are identical to a holdout sample. Serves as a reference for <code>ims_training</code>.</p> <code>None</code> <code>ims_trn_hol</code> <code>float | None</code> <p>Share of training samples that are identical to a holdout sample. Serves as a reference for <code>ims_training</code>.</p> <code>None</code> <code>dcr_training</code> <code>float | None</code> <p>Average nearest-neighbor distance between synthetic and training samples.</p> <code>None</code> <code>dcr_holdout</code> <code>float | None</code> <p>Average nearest-neighbor distance between synthetic and holdout samples. Serves as a reference for <code>dcr_training</code>.</p> <code>None</code> <code>dcr_trn_hol</code> <code>float | None</code> <p>Average nearest-neighbor distance between training and holdout samples. Serves as a reference for <code>dcr_training</code>.</p> <code>None</code> <code>dcr_share</code> <code>float | None</code> <p>Share of synthetic samples that are closer to a training sample than to a holdout sample. This should not be significantly larger than 50%.</p> <code>None</code> <code>nndr_training</code> <code>float | None</code> <p>10th smallest nearest-neighbor distance ratio between synthetic and training samples.</p> <code>None</code> <code>nndr_holdout</code> <code>float | None</code> <p>10th smallest nearest-neighbor distance ratio between synthetic and holdout samples.</p> <code>None</code> <code>nndr_trn_hol</code> <code>float | None</code> <p>10th smallest nearest-neighbor distance ratio between training and holdout samples.</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.ErrorEvent","title":"ErrorEvent","text":"<p>An error event containing an error message</p> <p>Parameters:</p> Name Type Description Default <code>event</code> <code>Literal['error'] | None</code> <code>None</code> <code>data</code> <code>ErrorMessage | None</code> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.ErrorMessage","title":"ErrorMessage","text":"<p>An error message</p> <p>Parameters:</p> Name Type Description Default <code>message</code> <code>str | None</code> <p>The error message</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.FairnessConfig","title":"FairnessConfig","text":"<p>Configure a fairness objective for the table. Only applicable for a subject table. The generated synthetic data will maintain robust statistical parity between the target column and the specified sensitive columns. All these columns must be categorical.</p> <p>Parameters:</p> Name Type Description Default <code>target_column</code> <code>str</code> <p>The name of the target column.</p> required <code>sensitive_columns</code> <code>list[str]</code> <p>The names of the sensitive columns.</p> required"},{"location":"api_domain/#mostlyai.sdk.domain.FilterByUser","title":"FilterByUser","text":"<p>Determines whether to filter usage reports for all users or only the current user. - <code>ALL</code>: Filter usage reports for all users. Only accessible for SuperAdmins. - <code>ME</code>: Filter usage reports for the current user.</p>"},{"location":"api_domain/#mostlyai.sdk.domain.Free","title":"Free","text":"<p>Usage statistics of free credits.</p> <p>Parameters:</p> Name Type Description Default <code>daily</code> <code>UsageCreditStats | None</code> <code>None</code> <code>monthly</code> <code>UsageCreditStats | None</code> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.Generator","title":"Generator","text":"<p>A generator is a set models that can generate synthetic data.</p> <p>The generator can be trained on one or more source tables. A quality assurance report is generated for each model.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The unique identifier of a generator.</p> required <code>name</code> <code>str</code> <p>The name of a generator.</p> required <code>description</code> <code>str | None</code> <p>The description of a generator.</p> <code>None</code> <code>training_status</code> <code>ProgressStatus</code> required <code>training_time</code> <code>AwareDatetime | None</code> <p>The UTC date and time when the training has finished.</p> <code>None</code> <code>usage</code> <code>GeneratorUsage | None</code> <code>None</code> <code>metadata</code> <code>Metadata | None</code> <code>None</code> <code>accuracy</code> <code>float | None</code> <p>The overall accuracy of the trained generator. This is the average of the overall accuracy scores of all trained models.</p> <code>None</code> <code>tables</code> <code>list[SourceTable] | None</code> <p>The tables of this generator</p> <code>None</code> <code>random_state</code> <code>int | None</code> <p>Seed for the random number generators. If None, the random number generator is initialized randomly, yielding different results for every run. Setting it to a specific integer ensures reproducible results across runs. Useful when consistent results are desired, e.g. for testing or debugging.</p> <code>None</code> <code>training</code> <code>Any | None</code> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.Generator.Training","title":"Training","text":""},{"location":"api_domain/#mostlyai.sdk.domain.Generator.Training.cancel","title":"cancel","text":"<pre><code>cancel()\n</code></pre> <p>Cancel training.</p>"},{"location":"api_domain/#mostlyai.sdk.domain.Generator.Training.logs","title":"logs","text":"<pre><code>logs(file_path=None)\n</code></pre> <p>Download the training logs and save to file.</p> <p>Parameters:</p> Name Type Description Default <code>file_path</code> <code>str | Path | None</code> <p>The file path to save the logs. Default is the current working directory.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>Path</code> <code>Path</code> <p>The path to the saved file.</p>"},{"location":"api_domain/#mostlyai.sdk.domain.Generator.Training.progress","title":"progress","text":"<pre><code>progress()\n</code></pre> <p>Retrieve job progress of training.</p> <p>Returns:</p> Name Type Description <code>JobProgress</code> <code>JobProgress</code> <p>The job progress of the training process.</p>"},{"location":"api_domain/#mostlyai.sdk.domain.Generator.Training.start","title":"start","text":"<pre><code>start()\n</code></pre> <p>Start training.</p>"},{"location":"api_domain/#mostlyai.sdk.domain.Generator.Training.wait","title":"wait","text":"<pre><code>wait(progress_bar=True, interval=2)\n</code></pre> <p>Poll training progress and loop until training has completed.</p> <p>Parameters:</p> Name Type Description Default <code>progress_bar</code> <code>bool</code> <p>If true, displays the progress bar. Default is True.</p> <code>True</code> <code>interval</code> <code>float</code> <p>The interval in seconds to poll the job progress. Default is 2 seconds.</p> <code>2</code>"},{"location":"api_domain/#mostlyai.sdk.domain.Generator.clone","title":"clone","text":"<pre><code>clone(training_status='new')\n</code></pre> <p>Clone the generator.</p> <p>Parameters:</p> Name Type Description Default <code>training_status</code> <code>Literal['new', 'continue']</code> <p>The training status of the cloned generator. Default is \"new\".</p> <code>'new'</code> <p>Returns:</p> Name Type Description <code>Generator</code> <code>Generator</code> <p>The cloned generator object.</p>"},{"location":"api_domain/#mostlyai.sdk.domain.Generator.config","title":"config","text":"<pre><code>config()\n</code></pre> <p>Retrieve writable generator properties.</p> <p>Returns:</p> Name Type Description <code>GeneratorConfig</code> <code>GeneratorConfig</code> <p>The generator properties as a configuration object.</p>"},{"location":"api_domain/#mostlyai.sdk.domain.Generator.delete","title":"delete","text":"<pre><code>delete()\n</code></pre> <p>Delete the generator.</p>"},{"location":"api_domain/#mostlyai.sdk.domain.Generator.export_to_file","title":"export_to_file","text":"<pre><code>export_to_file(file_path=None)\n</code></pre> <p>Export generator and save to file.</p> <p>Parameters:</p> Name Type Description Default <code>file_path</code> <code>str | Path | None</code> <p>The file path to save the generator.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>Path</code> <code>Path</code> <p>The path to the saved file.</p>"},{"location":"api_domain/#mostlyai.sdk.domain.Generator.reports","title":"reports","text":"<pre><code>reports(file_path=None, display=False)\n</code></pre> <p>Download or display the quality assurance reports.</p> <p>If display is True, the report is rendered inline via IPython display and no file is downloaded. Otherwise, the report is downloaded and saved to file_path (or a default location if None).</p> <p>Note that reports are not available for generators that were trained with less than 100 samples or had <code>enable_model_report</code> set to <code>False</code>.</p> <p>Parameters:</p> Name Type Description Default <code>file_path</code> <code>str | Path | None</code> <p>The file path to save the zipped reports (ignored if display=True).</p> <code>None</code> <code>display</code> <code>bool</code> <p>If True, render the report inline instead of downloading it.</p> <code>False</code> <p>Returns:</p> Type Description <code>Path | None</code> <p>Path | None: The path to the saved file if downloading, or None if display=True.</p>"},{"location":"api_domain/#mostlyai.sdk.domain.Generator.update","title":"update","text":"<pre><code>update(name=None, description=None)\n</code></pre> <p>Update a generator with specific parameters.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str | None</code> <p>The name of the generator.</p> <code>None</code> <code>description</code> <code>str | None</code> <p>The description of the generator.</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.GeneratorCloneTrainingStatus","title":"GeneratorCloneTrainingStatus","text":"<p>The training status of the new generator. The available options are:</p> <ul> <li><code>NEW</code>: The new generator will re-use existing data and model configurations.</li> <li><code>CONTINUE</code>: The new generator will re-use existing data and model configurations, as well as model weights.</li> </ul>"},{"location":"api_domain/#mostlyai.sdk.domain.GeneratorConfig","title":"GeneratorConfig","text":"<p>The configuration for creating a new generator.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str | None</code> <p>The name of a generator.</p> <code>None</code> <code>description</code> <code>str | None</code> <p>The description of a generator.</p> <code>None</code> <code>random_state</code> <code>int | None</code> <p>Seed for the random number generators. If None, the random number generator is initialized randomly, yielding different results for every run. Setting it to a specific integer ensures reproducible results across runs. Useful when consistent results are desired, e.g. for testing or debugging.</p> <code>None</code> <code>tables</code> <code>list[SourceTableConfig] | None</code> <p>The tables of a generator</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.GeneratorImportFromFileConfig","title":"GeneratorImportFromFileConfig","text":"<p>Configuration for importing a generator from a file.</p> <p>Parameters:</p> Name Type Description Default <code>file</code> <code>bytes</code> required"},{"location":"api_domain/#mostlyai.sdk.domain.GeneratorListItem","title":"GeneratorListItem","text":"<p>Essential generator details for listings.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The unique identifier of a generator.</p> required <code>name</code> <code>str</code> <p>The name of a generator.</p> required <code>description</code> <code>str | None</code> <p>The description of a generator.</p> <code>None</code> <code>training_status</code> <code>ProgressStatus</code> required <code>training_time</code> <code>AwareDatetime | None</code> <p>The UTC date and time when the training has finished.</p> <code>None</code> <code>usage</code> <code>GeneratorUsage | None</code> <code>None</code> <code>metadata</code> <code>Metadata | None</code> <code>None</code> <code>accuracy</code> <code>float | None</code> <p>The overall accuracy of the trained generator. This is the average of the overall accuracy scores of all trained models.</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.GeneratorUsage","title":"GeneratorUsage","text":"<p>Usage statistics of a generator.</p> <p>Parameters:</p> Name Type Description Default <code>total_datapoints</code> <code>int | None</code> <p>The total number of datapoints generated by this generator. Deprecated: This field is no longer valid and will always return <code>-1</code>. It will be removed in a future version.</p> <code>None</code> <code>total_compute_time</code> <code>int | None</code> <p>The total compute time in seconds used for training this generator. This is the sum of the elapsed compute time of all training tasks.</p> <code>None</code> <code>total_credits</code> <code>float | None</code> <p>The amount of credits consumed for training the generator.</p> <code>None</code> <code>total_virtual_cpu_time</code> <code>float | None</code> <p>The total virtual CPU time in seconds used for training this generator. This is the sum of the elapsed time multiplied by number of allocated virtual CPUs across all training tasks.</p> <code>None</code> <code>total_virtual_gpu_time</code> <code>float | None</code> <p>The total virtual GPU time in seconds used for training this generator. This is the sum of the elapsed time multiplied by number of allocated virtual GPUs across all training tasks.</p> <code>None</code> <code>no_of_synthetic_datasets</code> <code>int | None</code> <p>Number of synthetic datasets generated by this generator.</p> <code>None</code> <code>no_of_likes</code> <code>int | None</code> <p>Number of likes of this generator.</p> <code>None</code> <code>no_of_threads</code> <code>int | None</code> <p>Number of assistant threads using this generator.</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.HeartbeatEvent","title":"HeartbeatEvent","text":"<p>A heartbeat event to keep the connection alive</p> <p>Parameters:</p> Name Type Description Default <code>event</code> <code>Literal['heartbeat'] | None</code> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.IfExists","title":"IfExists","text":"<p>The behavior if the target location already exists.</p> <ul> <li><code>APPEND</code>: Append the data to the existing target.</li> <li><code>REPLACE</code>: Replace the existing target with the new data.</li> <li><code>FAIL</code>: Fail if the target already exists.</li> </ul>"},{"location":"api_domain/#mostlyai.sdk.domain.ImputationConfig","title":"ImputationConfig","text":"<p>Configure imputation.</p> <p>Parameters:</p> Name Type Description Default <code>columns</code> <code>list[str]</code> <p>The names of the columns to be imputed. Imputed columns will suppress the sampling of NULL values.</p> required"},{"location":"api_domain/#mostlyai.sdk.domain.JobProgress","title":"JobProgress","text":"<p>The progress of a job.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str | None</code> <code>None</code> <code>start_date</code> <code>AwareDatetime | None</code> <p>The UTC date and time when the job has started. If the job has not started yet, then this is None.</p> <code>None</code> <code>end_date</code> <code>AwareDatetime | None</code> <p>The UTC date and time when the job has ended. If the job is still, then this is None.</p> <code>None</code> <code>progress</code> <code>ProgressValue | None</code> <code>None</code> <code>status</code> <code>ProgressStatus | None</code> <code>None</code> <code>steps</code> <code>list[ProgressStep] | None</code> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.MemberRole","title":"MemberRole","text":"<p>The role of the user in the organization</p> <ul> <li><code>VIEWER</code>: The user can view and use all resources of the organization</li> <li><code>CONTRIBUTOR</code>: The user can create new resources for an organization, and becomes resource ADMIN</li> <li><code>ADMIN</code>: The user can manage members and all resources of an organization</li> </ul>"},{"location":"api_domain/#mostlyai.sdk.domain.MessageEvent","title":"MessageEvent","text":"<p>A message event containing an assistant message delta</p> <p>Parameters:</p> Name Type Description Default <code>event</code> <code>Literal['message'] | None</code> <code>None</code> <code>data</code> <code>AssistantMessageDelta | None</code> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.MessageStreamEvent","title":"MessageStreamEvent","text":"<p>Parameters:</p> Name Type Description Default <code>root</code> <code>MessageEvent | HeartbeatEvent | ErrorEvent</code> <p>An event in the server-sent event stream</p> required"},{"location":"api_domain/#mostlyai.sdk.domain.Metadata","title":"Metadata","text":"<p>The metadata of a resource.</p> <p>Parameters:</p> Name Type Description Default <code>creator_id</code> <code>str | None</code> <p>The unique identifier of a user.</p> <code>None</code> <code>creator_name</code> <code>str | None</code> <p>The name of a user. Contains only alphanumeric characters, hyphens, and underscores. Must start or end with alphanumeric. It must be globally case-insensitive unique considering organizations and users.</p> <code>None</code> <code>created_at</code> <code>AwareDatetime | None</code> <p>The UTC date and time when the resource has been created.</p> <code>None</code> <code>owner_id</code> <code>str | None</code> <p>The unique identifier of an account (either a user or an organization).</p> <code>None</code> <code>owner_name</code> <code>str | None</code> <p>The name of an account (either a user or an organization).</p> <code>None</code> <code>owner_type</code> <code>AccountType | None</code> <code>None</code> <code>owner_image</code> <code>str | None</code> <p>The URL of the account's image.</p> <code>None</code> <code>visibility</code> <code>Visibility | None</code> <code>None</code> <code>current_user_permission_level</code> <code>PermissionLevel | None</code> <code>None</code> <code>current_user_like_status</code> <code>bool | None</code> <p>A boolean indicating whether the user has liked the entity or not</p> <code>None</code> <code>short_lived_file_token</code> <code>str | None</code> <p>An auto-generated short-lived file token (<code>slft</code>) for accessing resource artifacts. The token is always restricted to a single resource, only valid for 60 minutes, and only accepted by API endpoints that allow to download single files.</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.ModelConfiguration","title":"ModelConfiguration","text":"<p>The training configuration for the model</p> <p>Parameters:</p> Name Type Description Default <code>model</code> <code>str | None</code> <p>The model to be used for training.</p> <code>None</code> <code>max_sample_size</code> <code>int | None</code> <p>The maximum number of samples to consider for training. If not provided, then all available samples will be taken.</p> <code>None</code> <code>batch_size</code> <code>int | None</code> <p>The physical batch size used for training the model. If not provided, batchSize will be chosen automatically.</p> <code>None</code> <code>gradient_accumulation_steps</code> <code>int | None</code> <p>Steps to accumulate gradients before optimizer update. If not provided, gradientAccumulationSteps will be chosen automatically.</p> <code>None</code> <code>max_training_time</code> <code>float | None</code> <p>The maximum number of minutes to train the model.</p> <code>14400</code> <code>max_epochs</code> <code>float | None</code> <p>The maximum number of epochs to train the model.</p> <code>100</code> <code>max_sequence_window</code> <code>int | None</code> <p>The maximum sequence window to consider for training. Only applicable for TABULAR models.</p> <code>100</code> <code>enable_flexible_generation</code> <code>bool | None</code> <p>If true, then the trained generator can be used for conditional simulation, rebalancing, imputation and fairness. If none of these will be needed, then one can gain extra accuracy by disabling this feature. This will then result in a fixed column order being fed into the training process, rather than a column order, that is randomly permuted for every batch.</p> <code>True</code> <code>value_protection</code> <code>bool | None</code> <p>Defines if Rare Category, Extreme value, or Sequence length protection will be applied.</p> <code>True</code> <code>rare_category_replacement_method</code> <code>RareCategoryReplacementMethod | None</code> <p>Specifies how rare categories will be sampled. Only applicable if value protection has been enabled.</p> <ul> <li><code>CONSTANT</code>: Replace rare categories by a constant <code>_RARE_</code> token.</li> <li><code>SAMPLE</code>: Replace rare categories by a sample from non-rare categories.</li> </ul> <code>&lt;RareCategoryReplacementMethod.constant: 'CONSTANT'&gt;</code> <code>differential_privacy</code> <code>DifferentialPrivacyConfig | None</code> <code>None</code> <code>compute</code> <code>str | None</code> <p>The unique identifier of a compute resource. Not applicable for SDK.</p> <code>None</code> <code>enable_model_report</code> <code>bool | None</code> <p>If false, then the Model report is not generated.</p> <code>True</code>"},{"location":"api_domain/#mostlyai.sdk.domain.ModelEncodingType","title":"ModelEncodingType","text":"<p>The encoding type used for model training and data generation.</p> <ul> <li><code>AUTO</code>: Model chooses among available encoding types based on the column's data type.</li> <li><code>TABULAR_CATEGORICAL</code>: Model samples from existing (non-rare) categories.</li> <li><code>TABULAR_NUMERIC_AUTO</code>: Model chooses among 3 numeric encoding types based on the values.</li> <li><code>TABULAR_NUMERIC_DISCRETE</code>: Model samples from existing discrete numerical values.</li> <li><code>TABULAR_NUMERIC_BINNED</code>: Model samples from binned buckets, to then sample randomly within a bucket.</li> <li><code>TABULAR_NUMERIC_DIGIT</code>: Model samples each digit of a numerical value.</li> <li><code>TABULAR_CHARACTER</code>: Model samples each character of a string value.</li> <li><code>TABULAR_DATETIME</code>: Model samples each part of a datetime value.</li> <li><code>TABULAR_DATETIME_RELATIVE</code>: Model samples the relative difference between datetimes within a sequence.</li> <li><code>TABULAR_LAT_LONG</code>: Model samples a latitude-longitude column. The format is \"latitude,longitude\".</li> <li><code>LANGUAGE_TEXT</code>: Model will sample free text, using a LANGUAGE model.</li> <li><code>LANGUAGE_CATEGORICAL</code>: Model samples from existing (non-rare) categories, using a LANGUAGE model.</li> <li><code>LANGUAGE_NUMERIC</code>: Model samples from the valid numeric value range, using a LANGUAGE model.</li> <li><code>LANGUAGE_DATETIME</code>: Model samples from the valid datetime value range, using a LANGUAGE model.</li> </ul>"},{"location":"api_domain/#mostlyai.sdk.domain.ModelMetrics","title":"ModelMetrics","text":"<p>Metrics regarding the quality of synthetic data, measured in terms of accuracy, similarity, and distances.</p> <ol> <li>Accuracy: Metrics regarding the accuracy of synthetic data, measured as the closeness of discretized lower dimensional marginal distributions.</li> <li>Similarity: Metrics regarding the similarity of the full joint distributions of samples within an embedding space.</li> <li>Distances: Metrics regarding the nearest neighbor distances between training, holdout, and synthetic samples in an numeric encoding space. Useful for assessing the novelty / privacy of synthetic data.</li> </ol> <p>The quality of synthetic data is assessed by comparing these metrics to the same metrics of a holdout dataset. The holdout dataset is a subset of the original training data, that was not used for training the synthetic data generator. The metrics of the synthetic data should be as close as possible to the metrics of the holdout data.</p> <p>Parameters:</p> Name Type Description Default <code>accuracy</code> <code>Accuracy | None</code> <code>None</code> <code>distances</code> <code>Distances | None</code> <code>None</code> <code>similarity</code> <code>Similarity | None</code> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.ModelType","title":"ModelType","text":"<p>The type of model.</p> <ul> <li><code>TABULAR</code>: A generative AI model tailored towards tabular data, trained from scratch.</li> <li><code>LANGUAGE</code>: A generative AI model build upon a (pre-trained) language model.</li> </ul>"},{"location":"api_domain/#mostlyai.sdk.domain.Notification","title":"Notification","text":"<p>A notification for a user.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The unique identifier of the notification.</p> required <code>type</code> <code>NotificationType</code> required <code>message</code> <code>str</code> <p>The message of the notification.</p> required <code>status</code> <code>NotificationStatus</code> required <code>created_at</code> <code>AwareDatetime</code> <p>The UTC date and time when the notification has been created.</p> required <code>resource_uri</code> <code>str | None</code> <p>The service URI of the entity</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.NotificationStatus","title":"NotificationStatus","text":"<p>The status of the notification.</p>"},{"location":"api_domain/#mostlyai.sdk.domain.NotificationType","title":"NotificationType","text":"<p>The type of the notification</p>"},{"location":"api_domain/#mostlyai.sdk.domain.Organization","title":"Organization","text":"<p>An organization that owns resources.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The unique identifier of an organization.</p> required <code>name</code> <code>str</code> <p>The name of an organization. Contains only alphanumeric characters, hyphens, and underscores. Must start or end with alphanumeric. It must be globally case-insensitive unique.</p> required <code>display_name</code> <code>str</code> <p>The display name of an organization.</p> required <code>description</code> <code>str | None</code> <p>The description of an organization. Supports markdown.</p> <code>None</code> <code>logo</code> <code>str | None</code> <p>The URL of the organization's logo.</p> <code>None</code> <code>email</code> <code>str | None</code> <p>The email address of the organization.</p> <code>None</code> <code>website</code> <code>str | None</code> <p>The URL of the organization's website.</p> <code>None</code> <code>members</code> <code>list[UserListItem] | None</code> <code>None</code> <code>metadata</code> <code>OrganizationMetadata | None</code> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.OrganizationConfig","title":"OrganizationConfig","text":"<p>The configuration for creating a new organization.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of an organization. Contains only alphanumeric characters, hyphens, and underscores. Must start or end with alphanumeric. It must be globally case-insensitive unique.</p> required <code>display_name</code> <code>str</code> <p>The display name of an organization.</p> required <code>description</code> <code>str | None</code> <p>The description of an organization. Supports markdown.</p> <code>None</code> <code>logo_base64</code> <code>str | None</code> <p>The base64-encoded image of the organization's logo.</p> <code>None</code> <code>email</code> <code>str | None</code> <p>The email address of the organization.</p> <code>None</code> <code>website</code> <code>str | None</code> <p>The URL of the organization's website.</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.OrganizationInvite","title":"OrganizationInvite","text":"<p>A non-personalized time-boxed invite to join an organization.</p> <p>Parameters:</p> Name Type Description Default <code>token</code> <code>str | None</code> <p>The generated token, encrypting organization, expiration timestamp, and role (VIEW).</p> <code>None</code> <code>link</code> <code>str | None</code> <p>The generated invite link.</p> <code>None</code> <code>expiration_date</code> <code>AwareDatetime | None</code> <p>The expiration date of the invite link. 72 hours after creation.</p> <code>None</code> <code>organization_id</code> <code>str | None</code> <p>The unique identifier of an organization.</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.OrganizationListItem","title":"OrganizationListItem","text":"<p>Essential organization details for listings.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The unique identifier of an organization.</p> required <code>name</code> <code>str | None</code> <p>The name of an organization. Contains only alphanumeric characters, hyphens, and underscores. Must start or end with alphanumeric. It must be globally case-insensitive unique.</p> <code>None</code> <code>display_name</code> <code>str</code> <p>The display name of an organization.</p> required <code>description</code> <code>str | None</code> <p>The description of an organization. Supports markdown.</p> <code>None</code> <code>logo</code> <code>str | None</code> <p>The URL of the organization's logo.</p> <code>None</code> <code>metadata</code> <code>OrganizationMetadata | None</code> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.OrganizationMember","title":"OrganizationMember","text":"<p>A member of an organization with their associated role.</p> <p>Parameters:</p> Name Type Description Default <code>user</code> <code>UserListItem | None</code> <code>None</code> <code>role</code> <code>MemberRole | None</code> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.OrganizationMetadata","title":"OrganizationMetadata","text":"<p>The metadata of an organization.</p> <p>Parameters:</p> Name Type Description Default <code>current_user_member_role</code> <code>MemberRole | None</code> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.PaginatedTotalCount","title":"PaginatedTotalCount","text":"<p>Parameters:</p> Name Type Description Default <code>root</code> <code>int</code> <p>The total number of entities within the list</p> required"},{"location":"api_domain/#mostlyai.sdk.domain.Paid","title":"Paid","text":"<p>Usage statistics of paid credits.</p> <p>Parameters:</p> Name Type Description Default <code>monthly</code> <code>UsageCreditStats | None</code> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.ParallelGenerationJobs","title":"ParallelGenerationJobs","text":"<p>The number of currently running generation jobs and the limit</p> <p>Parameters:</p> Name Type Description Default <code>current</code> <code>int | None</code> <p>The number of currently running generation jobs.</p> <code>None</code> <code>limit</code> <code>int | None</code> <p>The maximum number of running generation jobs at any time. If empty, then there is no limit.</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.ParallelTrainingJobs","title":"ParallelTrainingJobs","text":"<p>The number of currently running training jobs and the limit</p> <p>Parameters:</p> Name Type Description Default <code>current</code> <code>int | None</code> <p>The number of currently running training jobs</p> <code>None</code> <code>limit</code> <code>int | None</code> <p>The maximum number of running training jobs at any time. If empty, then there is no limit.</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.PaymentUrl","title":"PaymentUrl","text":"<p>The URL for purchasing a plan.</p> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>AnyUrl | None</code> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.PermissionLevel","title":"PermissionLevel","text":"<p>The permission level of the user with respect to this resource</p> <ul> <li><code>VIEW</code>: The user can view and use the resource</li> <li><code>ADMIN</code>: The user can edit, delete and transfer ownership of the resource</li> </ul>"},{"location":"api_domain/#mostlyai.sdk.domain.Plan","title":"Plan","text":"<p>A billing plan available for purchase.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The identifier of a plan.</p> required <code>name</code> <code>str</code> <p>The name of the plan.</p> required <code>billing_interval</code> <code>BillingInterval | None</code> <code>None</code> <code>price</code> <code>Price</code> required <code>description</code> <code>str | None</code> <p>The description of the plan.</p> <code>None</code> <code>features</code> <code>list[str] | None</code> <code>None</code> <code>metadata</code> <code>dict[str, str] | None</code> <p>The metadata of the plan.</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.PlanUpdateConfig","title":"PlanUpdateConfig","text":"<p>Request to upgrade or downgrade the user's plan.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str | None</code> <p>The identifier of a plan.</p> <code>None</code> <code>billing_interval</code> <code>BillingInterval | None</code> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.Price","title":"Price","text":"<p>The price information for a plan.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str | None</code> <p>The unique identifier of the price.</p> <code>None</code> <code>value</code> <code>float</code> <p>The price value.</p> required <code>currency</code> <code>str</code> <p>The currency code for the price.</p> required <code>metadata</code> <code>dict[str, str]</code> <p>The metadata of the price.</p> required"},{"location":"api_domain/#mostlyai.sdk.domain.Probe","title":"Probe","text":"<p>The generated synthetic samples returned as a result of the probe.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str | None</code> <p>The name of the table.</p> <code>None</code> <code>rows</code> <code>list[dict[str, Any]] | None</code> <p>An array of sample data objects.</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.ProgressStatus","title":"ProgressStatus","text":"<p>The status of a job or a step.</p> <ul> <li><code>NEW</code>: The job/step is being configured, and has not started yet</li> <li><code>CONTINUE</code>: The job/step is being configured, but has existing artifacts</li> <li><code>ON_HOLD</code>: The job/step has been started, but is kept on hold</li> <li><code>QUEUED</code>: The job/step has been started, and is awaiting for resources to execute</li> <li><code>IN_PROGRESS</code>: The job/step is currently running</li> <li><code>DONE</code>: The job/step has finished successfully</li> <li><code>FAILED</code>: The job/step has failed</li> <li><code>CANCELED</code>: The job/step has been canceled</li> </ul>"},{"location":"api_domain/#mostlyai.sdk.domain.ProgressStep","title":"ProgressStep","text":"<p>The progress of a step.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str | None</code> <p>The unique identifier of the step.</p> <code>None</code> <code>model_label</code> <code>str | None</code> <p>The unique label for the model, consisting of table name and a suffix for the model type. This will be empty for steps that are not related to a model.</p> <code>None</code> <code>compute_name</code> <code>str | None</code> <p>The name of a compute resource.</p> <code>None</code> <code>restarts</code> <code>int | None</code> <p>The number of previous restarts for the corresponding task.</p> <code>0</code> <code>task_type</code> <code>TaskType | None</code> <code>None</code> <code>step_code</code> <code>StepCode | None</code> <code>None</code> <code>start_date</code> <code>AwareDatetime | None</code> <p>The UTC date and time when the job has started. If the job has not started yet, then this is None.</p> <code>None</code> <code>end_date</code> <code>AwareDatetime | None</code> <p>The UTC date and time when the job has ended. If the job is still, then this is None.</p> <code>None</code> <code>compute_resources</code> <code>ComputeResources | None</code> <code>None</code> <code>messages</code> <code>list[dict[str, Any]] | None</code> <code>None</code> <code>error_message</code> <code>str | None</code> <code>None</code> <code>progress</code> <code>ProgressValue | None</code> <code>None</code> <code>status</code> <code>ProgressStatus | None</code> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.ProgressValue","title":"ProgressValue","text":"<p>The progress of a job or a step.</p> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>int | None</code> <code>0</code> <code>max</code> <code>int | None</code> <code>1</code>"},{"location":"api_domain/#mostlyai.sdk.domain.RareCategoryReplacementMethod","title":"RareCategoryReplacementMethod","text":"<p>Specifies how rare categories will be sampled. Only applicable if value protection has been enabled.</p> <ul> <li><code>CONSTANT</code>: Replace rare categories by a constant <code>_RARE_</code> token.</li> <li><code>SAMPLE</code>: Replace rare categories by a sample from non-rare categories.</li> </ul>"},{"location":"api_domain/#mostlyai.sdk.domain.RebalancingConfig","title":"RebalancingConfig","text":"<p>Configure rebalancing.</p> <p>Parameters:</p> Name Type Description Default <code>column</code> <code>str</code> <p>The name of the column to be rebalanced.  Only applicable for a subject table. Only applicable for categorical columns.</p> required <code>probabilities</code> <code>dict[str, float]</code> <p>The target distribution of samples values. The keys are the categorical values, and the values are the probabilities.</p> required"},{"location":"api_domain/#mostlyai.sdk.domain.SetVisibilityConfig","title":"SetVisibilityConfig","text":"<p>Configuration for setting the visibility of a resource.</p> <p>Parameters:</p> Name Type Description Default <code>visibility</code> <code>Visibility</code> required"},{"location":"api_domain/#mostlyai.sdk.domain.Similarity","title":"Similarity","text":"<p>Metrics regarding the similarity of the full joint distributions of samples within an embedding space.</p> <ol> <li>Cosine Similarity: The cosine similarity between the centroids of synthetic and training samples.</li> <li>Discriminator AUC: The AUC of a discriminative model to distinguish between synthetic and training samples.</li> </ol> <p>The Model2Vec model potion-base-8M is used to compute the embeddings of a string-ified representation of individual records. In case of sequential data the records, that belong to the same group, are being concatenated. We then calculate the cosine similarity between the centroids of the provided datasets within the embedding space.</p> <p>Again, we expect the similarity metrics to be as close as possible to 1, but not significantly higher than what is measured for the holdout data, as this would again indicate overfitting.</p> <p>In addition, a discriminative ML model is trained to distinguish between training and synthetic samples. The ability of this model to distinguish between training and synthetic samples is measured by the AUC score. For synthetic data to be considered realistic, the AUC score should be close to 0.5, which indicates that the synthetic data is indistinguishable from the training data.</p> <p>Parameters:</p> Name Type Description Default <code>cosine_similarity_training_synthetic</code> <code>float | None</code> <p>Cosine similarity between training and synthetic centroids.</p> <code>None</code> <code>cosine_similarity_training_holdout</code> <code>float | None</code> <p>Cosine similarity between training and holdout centroids. Serves as a reference for <code>cosine_similarity_training_synthetic</code>.</p> <code>None</code> <code>discriminator_auc_training_synthetic</code> <code>float | None</code> <p>Cross-validated AUC of a discriminative model to distinguish between training and synthetic samples.</p> <code>None</code> <code>discriminator_auc_training_holdout</code> <code>float | None</code> <p>Cross-validated AUC of a discriminative model to distinguish between training and holdout samples. Serves as a reference for <code>discriminator_auc_training_synthetic</code>.</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.SourceColumn","title":"SourceColumn","text":"<p>A column as part of a source table.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The unique identifier of a source column.</p> required <code>name</code> <code>str</code> <p>The name of a source column. It must be unique within a source table.</p> required <code>included</code> <code>bool | None</code> <p>If true, the column will be included in the training. If false, the column will be excluded from the training.</p> <code>True</code> <code>model_encoding_type</code> <code>ModelEncodingType</code> required <code>value_range</code> <code>SourceColumnValueRange | None</code> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.SourceColumnConfig","title":"SourceColumnConfig","text":"<p>The configuration for a source column when creating a new generator.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of a source column. It must be unique within a source table.</p> required <code>model_encoding_type</code> <code>ModelEncodingType | None</code> <code>&lt;ModelEncodingType.auto: 'AUTO'&gt;</code>"},{"location":"api_domain/#mostlyai.sdk.domain.SourceColumnValueRange","title":"SourceColumnValueRange","text":"<p>The (privacy-safe) range of values detected within a source column. These values can then be used as seed values for conditional simulation. For CATEGORICAL and NUMERIC_DISCRETE encoding types, this will be given as a list of unique values, sorted by popularity. For other NUMERIC and for DATETIME encoding types, this will be given as a min and max value. Note, that this property will only be populated, once the analysis step for the training of the generator has been completed.</p> <p>Parameters:</p> Name Type Description Default <code>min</code> <code>str | None</code> <p>The minimum value of the column. For dates, this is represented in ISO format.</p> <code>None</code> <code>max</code> <code>str | None</code> <p>The maximum value of the column. For dates, this is represented in ISO format.</p> <code>None</code> <code>values</code> <code>list[str] | None</code> <p>The list of distinct values of the column. Limited to a maximum of 1000 values.</p> <code>None</code> <code>has_null</code> <code>bool | None</code> <p>If true, null value was detected within the column.</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.SourceForeignKey","title":"SourceForeignKey","text":"<p>A foreign key relationship in a source table.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The unique identifier of a foreign key.</p> required <code>column</code> <code>str</code> <p>The column name of a foreign key.</p> required <code>referenced_table</code> <code>str</code> <p>The table name of the referenced table. That table must have a primary key already defined.</p> required <code>is_context</code> <code>bool</code> <p>If true, then the foreign key will be considered as a context relation. Note, that only one foreign key relation per table can be a context relation.</p> required"},{"location":"api_domain/#mostlyai.sdk.domain.SourceForeignKeyConfig","title":"SourceForeignKeyConfig","text":"<p>Configuration for defining a foreign key relationship in a source table.</p> <p>Parameters:</p> Name Type Description Default <code>column</code> <code>str</code> <p>The column name of a foreign key.</p> required <code>referenced_table</code> <code>str</code> <p>The table name of the referenced table. That table must have a primary key already defined.</p> required <code>is_context</code> <code>bool</code> <p>If true, then the foreign key will be considered as a context relation. Note, that only one foreign key relation per table can be a context relation.</p> required"},{"location":"api_domain/#mostlyai.sdk.domain.SourceTable","title":"SourceTable","text":"<p>A table as part of a generator.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The unique identifier of a source table.</p> required <code>source_connector_id</code> <code>str | None</code> <p>The unique identifier of a connector.</p> <code>None</code> <code>location</code> <code>str | None</code> <p>The location of a source table. Together with the source connector it uniquely identifies a source, and samples data from there.</p> <code>None</code> <code>name</code> <code>str</code> <p>The name of a source table. It must be unique within a generator.</p> required <code>primary_key</code> <code>str | None</code> <p>The column name of the primary key.</p> <code>None</code> <code>columns</code> <code>list[SourceColumn] | None</code> <p>The columns of this generator table.</p> <code>None</code> <code>foreign_keys</code> <code>list[SourceForeignKey] | None</code> <p>The foreign keys of a table.</p> <code>None</code> <code>tabular_model_metrics</code> <code>ModelMetrics | None</code> <code>None</code> <code>language_model_metrics</code> <code>ModelMetrics | None</code> <code>None</code> <code>tabular_model_configuration</code> <code>ModelConfiguration | None</code> <code>None</code> <code>language_model_configuration</code> <code>ModelConfiguration | None</code> <code>None</code> <code>total_rows</code> <code>int | None</code> <p>The total number of rows in the source table while fetching data for training.</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.SourceTableAddConfig","title":"SourceTableAddConfig","text":"<p>Configuration for adding a new source table to a generator.</p> <p>Parameters:</p> Name Type Description Default <code>source_connector_id</code> <code>str</code> <p>The unique identifier of a connector.</p> required <code>location</code> <code>str</code> <p>The location of a source table. Together with the source connector it uniquely identifies a source, and samples data from there.</p> required <code>name</code> <code>str | None</code> <p>The name of a source table. It must be unique within a generator.</p> <code>None</code> <code>include_children</code> <code>bool | None</code> <p>If true, all tables that are referenced by foreign keys will be included. If false, only the selected table will be included.</p> <code>False</code> <code>tabular_model_configuration</code> <code>ModelConfiguration | None</code> <code>None</code> <code>language_model_configuration</code> <code>ModelConfiguration | None</code> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.SourceTableConfig","title":"SourceTableConfig","text":"<p>The configuration for a source table when creating a new generator.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of a source table. It must be unique within a generator.</p> required <code>source_connector_id</code> <code>str | None</code> <p>The unique identifier of a connector.</p> <code>None</code> <code>location</code> <code>str | None</code> <p>The location of a source table. Together with the source connector it uniquely identifies a source, and samples data from there.</p> <code>None</code> <code>data</code> <code>str | None</code> <p>The base64-encoded string derived from a Parquet file containing the specified source table.</p> <code>None</code> <code>tabular_model_configuration</code> <code>ModelConfiguration | None</code> <code>None</code> <code>language_model_configuration</code> <code>ModelConfiguration | None</code> <code>None</code> <code>primary_key</code> <code>str | None</code> <p>The column name of the primary key.</p> <code>None</code> <code>foreign_keys</code> <code>list[SourceForeignKeyConfig] | None</code> <p>The foreign key configurations of this table.</p> <code>None</code> <code>columns</code> <code>list[SourceColumnConfig] | None</code> <p>The column configurations of this table.</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.StepCode","title":"StepCode","text":"<p>The unique code for the step.</p>"},{"location":"api_domain/#mostlyai.sdk.domain.SyntheticDataset","title":"SyntheticDataset","text":"<p>A synthetic dataset is created based on a trained generator.</p> <p>It consists of synthetic samples, as well as a quality assurance report.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The unique identifier of a synthetic dataset.</p> required <code>generator_id</code> <code>str | None</code> <p>The unique identifier of a generator.</p> <code>None</code> <code>metadata</code> <code>Metadata | None</code> <code>None</code> <code>name</code> <code>str</code> <p>The name of a synthetic dataset.</p> required <code>description</code> <code>str | None</code> <p>The description of a synthetic dataset.</p> <code>None</code> <code>generation_status</code> <code>ProgressStatus</code> required <code>generation_time</code> <code>AwareDatetime | None</code> <p>The UTC date and time when the generation has finished.</p> <code>None</code> <code>tables</code> <code>list[SyntheticTable] | None</code> <p>The tables of this synthetic dataset.</p> <code>None</code> <code>delivery</code> <code>SyntheticDatasetDelivery | None</code> <code>None</code> <code>accuracy</code> <code>float | None</code> <p>The overall accuracy of the trained generator. This is the average of the overall accuracy scores of all trained models.</p> <code>None</code> <code>usage</code> <code>SyntheticDatasetUsage | None</code> <code>None</code> <code>compute</code> <code>str | None</code> <p>The unique identifier of a compute resource. Not applicable for SDK.</p> <code>None</code> <code>random_state</code> <code>int | None</code> <p>Seed for the random number generators. If None, the random number generator is initialized randomly, yielding different results for every run. Setting it to a specific integer ensures reproducible results across runs. Useful when consistent results are desired, e.g. for testing or debugging.</p> <code>None</code> <code>generation</code> <code>Any | None</code> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.SyntheticDataset.Generation","title":"Generation","text":""},{"location":"api_domain/#mostlyai.sdk.domain.SyntheticDataset.Generation.cancel","title":"cancel","text":"<pre><code>cancel()\n</code></pre> <p>Cancel the generation process.</p>"},{"location":"api_domain/#mostlyai.sdk.domain.SyntheticDataset.Generation.logs","title":"logs","text":"<pre><code>logs(file_path=None)\n</code></pre> <p>Download the generation logs and save to file.</p> <p>Parameters:</p> Name Type Description Default <code>file_path</code> <code>str | Path | None</code> <p>The file path to save the logs. Default is the current working directory.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>Path</code> <code>Path</code> <p>The path to the saved file.</p>"},{"location":"api_domain/#mostlyai.sdk.domain.SyntheticDataset.Generation.progress","title":"progress","text":"<pre><code>progress()\n</code></pre> <p>Retrieve the progress of the generation process.</p> <p>Returns:</p> Name Type Description <code>JobProgress</code> <code>JobProgress</code> <p>The progress of the generation process.</p>"},{"location":"api_domain/#mostlyai.sdk.domain.SyntheticDataset.Generation.start","title":"start","text":"<pre><code>start()\n</code></pre> <p>Start the generation process.</p>"},{"location":"api_domain/#mostlyai.sdk.domain.SyntheticDataset.Generation.wait","title":"wait","text":"<pre><code>wait(progress_bar=True, interval=2)\n</code></pre> <p>Poll the generation progress and wait until the process is complete.</p> <p>Parameters:</p> Name Type Description Default <code>progress_bar</code> <code>bool</code> <p>If true, displays a progress bar. Default is True.</p> <code>True</code> <code>interval</code> <code>float</code> <p>Interval in seconds to poll the job progress. Default is 2 seconds.</p> <code>2</code>"},{"location":"api_domain/#mostlyai.sdk.domain.SyntheticDataset.config","title":"config","text":"<pre><code>config()\n</code></pre> <p>Retrieve writable synthetic dataset properties.</p> <p>Returns:</p> Name Type Description <code>SyntheticDatasetConfig</code> <code>SyntheticDatasetConfig</code> <p>The synthetic dataset properties as a configuration object.</p>"},{"location":"api_domain/#mostlyai.sdk.domain.SyntheticDataset.data","title":"data","text":"<pre><code>data(return_type='auto')\n</code></pre> <p>Download synthetic dataset and return as dictionary of pandas DataFrames.</p> <p>Parameters:</p> Name Type Description Default <code>return_type</code> <code>Literal['auto', 'dict']</code> <p>The type of the return value. \"dict\" will always provide a dictionary of DataFrames. \"auto\" will return a single DataFrame for a single-table generator, and a dictionary of DataFrames for a multi-table generator. Default is \"auto\".</p> <code>'auto'</code> <p>Returns:</p> Type Description <code>DataFrame | dict[str, DataFrame]</code> <p>Union[pd.DataFrame, dict[str, pd.DataFrame]]: The synthetic dataset. See return_type for the format of the return value.</p>"},{"location":"api_domain/#mostlyai.sdk.domain.SyntheticDataset.delete","title":"delete","text":"<pre><code>delete()\n</code></pre> <p>Delete the synthetic dataset.</p>"},{"location":"api_domain/#mostlyai.sdk.domain.SyntheticDataset.download","title":"download","text":"<pre><code>download(file_path=None, format='parquet')\n</code></pre> <p>Download synthetic dataset and save to file.</p> <p>Parameters:</p> Name Type Description Default <code>file_path</code> <code>str | Path | None</code> <p>The file path to save the synthetic dataset.</p> <code>None</code> <code>format</code> <code>Literal['parquet', 'csv', 'json']</code> <p>The format of the synthetic dataset. Default is \"parquet\".</p> <code>'parquet'</code> <p>Returns:</p> Name Type Description <code>Path</code> <code>Path</code> <p>The path to the saved file.</p>"},{"location":"api_domain/#mostlyai.sdk.domain.SyntheticDataset.reports","title":"reports","text":"<pre><code>reports(file_path=None, display=False)\n</code></pre> <p>Download or display the quality assurance reports.</p> <p>If display is True, the report is rendered inline via IPython display and no file is downloaded. Otherwise, the report is downloaded and saved to file_path (or a default location if None).</p> <p>Note that reports are not available for synthetic datasets that generated less than 100 samples or had <code>enable_data_report</code> set to <code>False</code>.</p> <p>Parameters:</p> Name Type Description Default <code>file_path</code> <code>str | Path | None</code> <p>The file path to save the zipped reports (ignored if display=True).</p> <code>None</code> <code>display</code> <code>bool</code> <p>If True, render the report inline instead of downloading it.</p> <code>False</code> <p>Returns:</p> Type Description <code>Path | None</code> <p>Path | None: The path to the saved file if downloading, or None if display=True.</p>"},{"location":"api_domain/#mostlyai.sdk.domain.SyntheticDataset.update","title":"update","text":"<pre><code>update(name=None, description=None, delivery=None)\n</code></pre> <p>Update a synthetic dataset with specific parameters.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str | None</code> <p>The name of the synthetic dataset.</p> <code>None</code> <code>description</code> <code>str | None</code> <p>The description of the synthetic dataset.</p> <code>None</code> <code>delivery</code> <code>SyntheticDatasetDelivery | None</code> <p>The delivery configuration for the synthetic dataset.</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.SyntheticDatasetConfig","title":"SyntheticDatasetConfig","text":"<p>The configuration for creating a new synthetic dataset.</p> <p>Parameters:</p> Name Type Description Default <code>generator_id</code> <code>str | None</code> <p>The unique identifier of a generator.</p> <code>None</code> <code>name</code> <code>str | None</code> <p>The name of a synthetic dataset.</p> <code>None</code> <code>description</code> <code>str | None</code> <p>The description of a synthetic dataset.</p> <code>None</code> <code>random_state</code> <code>int | None</code> <p>Seed for the random number generators. If None, the random number generator is initialized randomly, yielding different results for every run. Setting it to a specific integer ensures reproducible results across runs. Useful when consistent results are desired, e.g. for testing or debugging.</p> <code>None</code> <code>tables</code> <code>list[SyntheticTableConfig] | None</code> <code>None</code> <code>delivery</code> <code>SyntheticDatasetDelivery | None</code> <code>None</code> <code>compute</code> <code>str | None</code> <p>The unique identifier of a compute resource. Not applicable for SDK.</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.SyntheticDatasetDelivery","title":"SyntheticDatasetDelivery","text":"<p>Configuration for delivering a synthetic dataset to a destination.</p> <p>Parameters:</p> Name Type Description Default <code>overwrite_tables</code> <code>bool</code> <p>If true, tables in the destination will be overwritten. If false, any tables exist, the delivery will fail.</p> required <code>destination_connector_id</code> <code>str</code> <p>The unique identifier of a connector.</p> required <code>location</code> <code>str</code> <p>The location for the destination connector.</p> required"},{"location":"api_domain/#mostlyai.sdk.domain.SyntheticDatasetListItem","title":"SyntheticDatasetListItem","text":"<p>Essential synthetic dataset details for listings.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str</code> <p>The unique identifier of a synthetic dataset.</p> required <code>metadata</code> <code>Metadata | None</code> <code>None</code> <code>name</code> <code>str</code> <p>The name of a synthetic dataset.</p> required <code>description</code> <code>str | None</code> <p>The description of a synthetic dataset.</p> <code>None</code> <code>generation_status</code> <code>ProgressStatus</code> required <code>generation_time</code> <code>AwareDatetime | None</code> <p>The UTC date and time when the generation has finished.</p> <code>None</code> <code>usage</code> <code>SyntheticDatasetUsage | None</code> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.SyntheticDatasetUsage","title":"SyntheticDatasetUsage","text":"<p>Usage statistics of a synthetic dataset.</p> <p>Parameters:</p> Name Type Description Default <code>total_datapoints</code> <code>int | None</code> <p>The number of datapoints in the synthetic dataset. Deprecated: This field is no longer valid and will always return <code>-1</code>. It will be removed in a future version.</p> <code>None</code> <code>total_compute_time</code> <code>int | None</code> <p>The total compute time in seconds used for generating this synthetic dataset. This is the sum of the compute time of all trained tasks.</p> <code>None</code> <code>total_credits</code> <code>float | None</code> <p>The amount of credits consumed for generating the synthetic dataset.</p> <code>None</code> <code>total_virtual_cpu_time</code> <code>float | None</code> <p>The total virtual CPU time in seconds used for training this generator. This is the sum of the elapsed time multiplied by number of allocated virtual CPUs across all training tasks.</p> <code>None</code> <code>total_virtual_gpu_time</code> <code>float | None</code> <p>The total virtual GPU time in seconds used for training this generator. This is the sum of the elapsed time multiplied by number of allocated virtual GPUs across all training tasks.</p> <code>None</code> <code>no_of_likes</code> <code>int | None</code> <p>Number of likes of this synthetic dataset.</p> <code>None</code> <code>no_of_downloads</code> <code>int | None</code> <p>Number of downloads of this synthetic dataset.</p> <code>None</code> <code>no_of_threads</code> <code>int | None</code> <p>Number of assistant threads using this synthetic dataset.</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.SyntheticProbeConfig","title":"SyntheticProbeConfig","text":"<p>The configuration for probing for new synthetic samples.</p> <p>Parameters:</p> Name Type Description Default <code>generator_id</code> <code>str | None</code> <p>The unique identifier of a generator.</p> <code>None</code> <code>random_state</code> <code>int | None</code> <p>Seed for the random number generators. If None, the random number generator is initialized randomly, yielding different results for every run. Setting it to a specific integer ensures reproducible results across runs. Useful when consistent results are desired, e.g. for testing or debugging.</p> <code>None</code> <code>tables</code> <code>list[SyntheticTableConfig] | None</code> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.SyntheticTable","title":"SyntheticTable","text":"<p>A synthetic table that will be generated.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str | None</code> <p>The unique identifier of a synthetic table.</p> <code>None</code> <code>name</code> <code>str</code> <p>The name of a source table. It must be unique within a generator.</p> required <code>configuration</code> <code>SyntheticTableConfiguration | None</code> <code>None</code> <code>tabular_model_metrics</code> <code>ModelMetrics | None</code> <code>None</code> <code>language_model_metrics</code> <code>ModelMetrics | None</code> <code>None</code> <code>foreign_keys</code> <code>list[SourceForeignKey] | None</code> <p>The foreign keys of a table.</p> <code>None</code> <code>total_rows</code> <code>int | None</code> <p>The total number of rows for that table in the generated synthetic dataset.</p> <code>None</code> <code>total_datapoints</code> <code>int | None</code> <p>Deprecated: This field is no longer valid and will always return <code>-1</code>. It will be removed in a future version.</p> <code>None</code> <code>source_table_total_rows</code> <code>int | None</code> <p>The total number of rows in the source table while fetching data for training.</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.SyntheticTableConfig","title":"SyntheticTableConfig","text":"<p>The configuration for a synthetic table when creating a new synthetic dataset.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of a synthetic table. This matches the name of a corresponding SourceTable.</p> required <code>configuration</code> <code>SyntheticTableConfiguration | None</code> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.SyntheticTableConfiguration","title":"SyntheticTableConfiguration","text":"<p>The sample configuration for a synthetic table</p> <p>Parameters:</p> Name Type Description Default <code>sample_size</code> <code>int | None</code> <p>Number of generated samples. Only applicable for subject tables. If neither size nor seed is provided, then the default behavior for Synthetic Datasets is to generate the same size of samples as the original, and the default behavior for Synthetic Probes is to generate one subject only.</p> <code>None</code> <code>sample_seed_connector_id</code> <code>str | None</code> <p>The connector id of the seed data for conditional simulation</p> <code>None</code> <code>sample_seed_dict</code> <code>str | None</code> <p>The base64-encoded string derived from a json line file containing the specified sample seed data. This allows conditional live probing via non-python clients.</p> <code>None</code> <code>sample_seed_data</code> <code>str | None</code> <p>The base64-encoded string derived from a Parquet file containing the specified sample seed data. This allows conditional simulation as well as live probing via python clients.</p> <code>None</code> <code>sampling_temperature</code> <code>float | None</code> <p>temperature for sampling</p> <code>1.0</code> <code>sampling_top_p</code> <code>float | None</code> <p>topP for sampling</p> <code>1.0</code> <code>rebalancing</code> <code>RebalancingConfig | None</code> <code>None</code> <code>imputation</code> <code>ImputationConfig | None</code> <code>None</code> <code>fairness</code> <code>FairnessConfig | None</code> <code>None</code> <code>enable_data_report</code> <code>bool | None</code> <p>If false, then the Data report is not generated. If enableDataReport is set to false on generator, then enableDataReport is automatically set to false.</p> <code>True</code>"},{"location":"api_domain/#mostlyai.sdk.domain.TaskType","title":"TaskType","text":"<p>The type of the task.</p>"},{"location":"api_domain/#mostlyai.sdk.domain.TransferOwnershipConfig","title":"TransferOwnershipConfig","text":"<p>The configuration for transferring ownership of a resource to an account.</p> <p>Parameters:</p> Name Type Description Default <code>account_id</code> <code>str | None</code> <p>The unique identifier of an account (either a user or an organization).</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.UsageCreditStats","title":"UsageCreditStats","text":"<p>User credits statistics and limits for the current user.</p> <p>Parameters:</p> Name Type Description Default <code>current</code> <code>float | None</code> <p>The current credit balance for the user.</p> <code>None</code> <code>limit</code> <code>float | None</code> <p>The credit limit for the user. If empty, then there is no limit.</p> <code>None</code> <code>period_start</code> <code>AwareDatetime | None</code> <p>The UTC date and time when the current time period started.</p> <code>None</code> <code>period_end</code> <code>AwareDatetime | None</code> <p>The UTC date and time when the current time period ends.</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.User","title":"User","text":"<p>The public attributes of a user of the service.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str | None</code> <p>The unique identifier of a user.</p> <code>None</code> <code>name</code> <code>str | None</code> <p>The name of a user. Contains only alphanumeric characters, hyphens, and underscores. Must start or end with alphanumeric. It must be globally case-insensitive unique considering organizations and users.</p> <code>None</code> <code>first_name</code> <code>str | None</code> <p>First name of a user</p> <code>None</code> <code>last_name</code> <code>str | None</code> <p>Last name of a user</p> <code>None</code> <code>avatar</code> <code>str | None</code> <p>The URL of the user's avatar</p> <code>None</code> <code>organizations</code> <code>list[OrganizationListItem] | None</code> <p>The organizations the user belongs to</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.UserCredits","title":"UserCredits","text":"<p>Usage statistics and limits for the current user.</p> <p>Parameters:</p> Name Type Description Default <code>free</code> <code>Free</code> <p>Usage statistics of free credits.</p> required <code>paid</code> <code>Paid | None</code> <p>Usage statistics of paid credits.</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.UserListItem","title":"UserListItem","text":"<p>Essential information about a user for public listings.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>str | None</code> <p>The unique identifier of a user.</p> <code>None</code> <code>name</code> <code>str | None</code> <p>The name of a user. Contains only alphanumeric characters, hyphens, and underscores. Must start or end with alphanumeric. It must be globally case-insensitive unique considering organizations and users.</p> <code>None</code> <code>first_name</code> <code>str | None</code> <p>First name of a user</p> <code>None</code> <code>last_name</code> <code>str | None</code> <p>Last name of a user</p> <code>None</code> <code>avatar</code> <code>str | None</code> <p>The URL of the user's avatar</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.UserPlan","title":"UserPlan","text":"<p>The type of the user subscription plan.</p>"},{"location":"api_domain/#mostlyai.sdk.domain.UserSettingsAssistantUpdateConfig","title":"UserSettingsAssistantUpdateConfig","text":"<p>Configuration for updating a user's assistant-related settings.</p> <p>Parameters:</p> Name Type Description Default <code>about_user_message</code> <code>str | None</code> <p>The instruction what the Assistant should know about the user to provide better response</p> <code>None</code> <code>about_model_message</code> <code>str | None</code> <p>The instruction how the Assistant should respond</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.UserSettingsProfileUpdateConfig","title":"UserSettingsProfileUpdateConfig","text":"<p>Configuration for updating a user's profile settings.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str | None</code> <p>The name of a user. Contains only alphanumeric characters, hyphens, and underscores. Must start or end with alphanumeric. It must be globally case-insensitive unique considering organizations and users.</p> <code>None</code> <code>first_name</code> <code>str | None</code> <p>First name of a user</p> <code>None</code> <code>last_name</code> <code>str | None</code> <p>Last name of a user</p> <code>None</code> <code>avatar</code> <code>str | None</code> <p>The base64-encoded image of the user's avatar</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.UserSettingsUpdateConfig","title":"UserSettingsUpdateConfig","text":"<p>The configuration for updating user settings.</p> <p>Parameters:</p> Name Type Description Default <code>profile</code> <code>UserSettingsProfileUpdateConfig | None</code> <code>None</code> <code>assistant</code> <code>UserSettingsAssistantUpdateConfig | None</code> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.UserUsage","title":"UserUsage","text":"<p>Usage statistics and limits for the current user.</p> <p>Parameters:</p> Name Type Description Default <code>parallel_training_jobs</code> <code>ParallelTrainingJobs | None</code> <p>The number of currently running training jobs and the limit</p> <code>None</code> <code>parallel_generation_jobs</code> <code>ParallelGenerationJobs | None</code> <p>The number of currently running generation jobs and the limit</p> <code>None</code>"},{"location":"api_domain/#mostlyai.sdk.domain.Visibility","title":"Visibility","text":"<p>Indicates the visibility of the resource.</p> <ul> <li><code>PUBLIC</code> - Everyone can access the resource.</li> <li><code>UNLISTED</code>- Anyone with the direct link can access the resource. No public listings.</li> <li><code>PRIVATE</code> - Accessible only by the owner. For organizations, all members can access.</li> </ul>"},{"location":"api_domain/#mostlyai.sdk.domain._SyntheticDataConfigValidation","title":"_SyntheticDataConfigValidation","text":"<p>Validation logic for SyntheticDatasetConfig and SyntheticProbeConfig against Generator</p> <p>Parameters:</p> Name Type Description Default <code>synthetic_config</code> <code>SyntheticDatasetConfig | SyntheticProbeConfig</code> required <code>generator</code> <code>Generator</code> required"},{"location":"api_domain/#mostlyai.sdk.domain._SyntheticTableConfigValidation","title":"_SyntheticTableConfigValidation","text":"<p>Validation logic for SyntheticTableConfig against SourceTable</p> <p>Parameters:</p> Name Type Description Default <code>synthetic_table</code> <code>SyntheticTableConfig</code> required <code>source_table</code> <code>SourceTable</code> required"},{"location":"syntax/","title":"MOSTLY AI Cheat Sheet","text":""},{"location":"syntax/#initialization","title":"Initialization","text":"<pre><code>from mostlyai.sdk import MostlyAI\n\n# local mode (with TCP port)\nmostly = MostlyAI(\n    local=True,\n    local_dir='~/mostlyai',\n    local_port=8080,\n)\n\n# client mode\nmostly = MostlyAI(\n    base_url='https://app.mostly.ai', # or set env var `MOSTLY_BASE_URL`\n    api_key='INSERT_YOUR_API_KEY',    # or set env var `MOSTLY_API_KEY`\n)\n</code></pre>"},{"location":"syntax/#generators","title":"Generators","text":"<pre><code># shorthand syntax to train a new single-table generator\ng = mostly.train(name: str, data: pd.DataFrame)\n\n# train a new generator\ng = mostly.train(config: dict | GeneratorConfig, start: bool, wait: bool)\n\n# configure a new generator and launch separately\ng = mostly.generators.create(config: dict | GeneratorConfig)\ng.training.start()\ng.training.wait()\ng.training.progress()  # includes loss messages\ng.training.logs()\n\n# download a ZIP of quality assurance reports\ng.reports()\n\n# iterate over all your available generators\nfor g in mostly.generators.list():\n    print(g.id, g.name)\n\n# fetch a generator by id\ng = mostly.generators.get(id: str)\n\n# fetch a generator's configuration\nconfig = g.config()\n\n# open a generator in a new browser tab\ng.open()\n\n# update a generator\ng.update(name: str, ...)\n\n# delete a generator\ng.delete()\n\n# export a generator as a ZIP file\nfn = g.export_to_file()\n# import a generator from a ZIP file\ng = mostly.generators.import_from_file(fn)\n\n# continue training of an existing generator (with connectors)\ng2 = g.clone(\"continue\")\ng2.training.start()\ng2.training.wait()\n</code></pre>"},{"location":"syntax/#synthetic-datasets","title":"Synthetic Datasets","text":"<pre><code># shorthand syntax for generating a new synthetic dataset\nsd = mostly.generate(g, size: int)\n\n# shorthand syntax for conditionally generating a new synthetic dataset\nsd = mostly.generate(g, seed: pd.DataFrame)\n\n# generate a new synthetic dataset\nsd = mostly.generate(g, config: dict | SyntheticDatasetConfig, start: bool, wait: bool)\n\n# configure a new synthetic dataset and launch separately\nsd = mostly.synthetic_datasets.create(config: dict | SyntheticDatasetConfig)\nsd.generation.start()\nsd.generation.wait()\nsd.generation.progress()\nsd.generation.logs()\n\n# download a ZIP of quality assurance reports\nsd.reports()\n\n# iterate over all your available synthetic datasets\nfor sd in mostly.synthetic_datasets.list():\n    print(sd.id, sd.name)\n\n# fetch a synthetic dataset by id\nsd = mostly.synthetic_datasets.get(id: str)\n\n# fetch a synthetic dataset's configuration\nconfig = sd.config()\n\n# open a synthetic dataset in a new browser tab\nsd.open()\n\n# download a synthetic dataset\nsd.download(file: str, format: str)\n\n# fetch the synthetic dataset's data\nsyn_df = sd.data()\n\n# update a synthetic dataset\nsd.update(name: str, ...)\n\n# delete a synthetic dataset\nsd.delete()\n</code></pre> <p>Synthetic probes allow to instantly generate synthetic samples on demand, without storing these on the platform. This feature depends on the availability of Live Probing on the platform. The syntax is similar to generating a synthetic dataset, with the notable difference that its return value is already the synthetic data as pandas DataFrame(s). <pre><code># shorthand syntax for probing for synthetic samples\nsyn_df = mostly.probe(g, size: int)\n\n# shorthand syntax for conditionally probing for synthetic samples\nsyn_df = mostly.probe(g, seed: pd.DataFrame)\n\n# probe for synthetic samples\nsyn_df = mostly.probe(g, config: dict | SyntheticDatasetConfig)\n</code></pre></p>"},{"location":"syntax/#connectors","title":"Connectors","text":"<p>Connectors can be used both as a source of original data for training a generator, as well as a destination for delivering the generated synthetic data samples to. See ConnectorConfig for the full list of available connectors, and their corresponding configuration parameters.</p> <pre><code># create a new connector\nc = mostly.connect(config: dict | ConnectorConfig)\n\n# fetch a connector by id\nc = mostly.connectors.get(id: str)\n\n# list all locations of a connector\nc.locations(prefix: str)\n\n# fetch schema for a specific location\nc.schema(location: str)\n\n# iterate over all your available connectors\nfor c in mostly.connectors.list():\n    print(c.id, c.name)\n\n# update a connector\nc.update(name: str, ...)\n\n# open a connector in a new browser tab\nc.open()\n\n# delete a connector\nc.delete()\n</code></pre>"},{"location":"syntax/#datasets","title":"Datasets","text":"<p>Datasets can be used to train generators or create artifacts and may be created with or without a corresponding connector. Datasets are only available in <code>client</code> mode.</p> <pre><code># create a new dataset\nds = mostly.datasets.create(config: dict | DatasetConfig)\n\n# retrieve a dataset by id\nds = mostly.datasets.get(dataset_id: str)\n\n# list datasets (iterator with optional filters)\nfor ds in mostly.datasets.list(\n    offset: int = 0,\n    limit: int | None = None,\n    search_term: str | None = None,\n    owner_id: str | list[str] | None = None,\n    visibility: str | list[str] | None = None,     # e.g., PUBLIC, PRIVATE, UNLISTED\n    created_from: str | None = None,               # YYYY-MM-DD\n    created_to: str | None = None,                 # YYYY-MM-DD\n    sort_by: str | list[str] | None = None,        # NO_OF_THREADS | NO_OF_LIKES | RECENCY\n):\n    print(ds.id, ds.name)\n\n# update an existing dataset (partial patch)\nds = mostly.datasets._update(dataset_id: str, config: dict | DatasetPatchConfig)\n\n# delete a dataset\nmostly.datasets._delete(dataset_id: str)\n\n# download a file from a dataset\ncontent_bytes, filename = mostly.datasets._download_file(\n    dataset_id: str,\n    file_path: str,                                 # path inside the dataset\n)\n\n# upload a file to a dataset\nmostly.datasets._upload_file(\n    dataset_id: str,\n    file_path: str | Path,                          # local path to file\n)\n\n# delete a file from a dataset\nmostly.datasets._delete_file(\n    dataset_id: str,\n    file_path: str | Path,                          # path inside the dataset\n)\n</code></pre>"},{"location":"syntax/#miscellaneous","title":"Miscellaneous","text":"<pre><code># fetch info on your user account\nmostly.me()\n\n# fetch info about the platform\nmostly.about()\n\n# list all available models\nmostly.models()\n\n# list all available computes\nmostly.computes()\n</code></pre>"},{"location":"tutorials/","title":"Synthetic Data Tutorials","text":"<p>Explore synthetic data tutorials with the option to run them either in Google Colab or open them in VS Code.</p> Description Colab Link Notebook Link Getting Started with the SDK View Notebook Validate synthetic data via Train-Synthetic-Test-Real View Notebook Explore the size vs. accuracy trade-off for synthetic data View Notebook Differentially Private Synthetic Data View Notebook Rebalance synthetic datasets for data augmentation View Notebook Conditionally simulate synthetic (geo) data View Notebook Explain AI with synthetic data View Notebook Generate fair synthetic data View Notebook Generate synthetic text via a fast LSTM model trained from scratch View Notebook Generate synthetic text via a pre-trained Large Language Model View Notebook Perform multi-table synthesis View Notebook Analyse star-schema correlations View Notebook Develop a fake or real discriminator with Synthetic Data View Notebook Close gaps in your data with Smart Imputation View Notebook Calculate accuracy and privacy metrics for Quality Assurance View Notebook Enrich Sensitive Data with LLMs using Synthetic Replicas View Notebook MOSTLY AI vs. SDV comparison: single-table scenario View Notebook MOSTLY AI vs. SDV comparison: sequential scenario View Notebook"},{"location":"usage/","title":"Usage Examples","text":""},{"location":"usage/#single-table-tabular-data","title":"Single-table tabular data","text":"<p>Train a tabular model on the US Census Income dataset, with differential privacy guarantees.</p> <pre><code>import pandas as pd\nfrom mostlyai.sdk import MostlyAI\n\n# load original data\nrepo_url = 'https://github.com/mostly-ai/public-demo-data'\ndf_original = pd.read_csv(f'{repo_url}/raw/dev/census/census.csv.gz')\n\n# instantiate SDK\nmostly = MostlyAI()\n\n# train a generator\ng = mostly.train(config={\n        'name': 'US Census Income',          # name of the generator\n        'tables': [{                         # provide list of table(s)\n            'name': 'census',                # name of the table\n            'data': df_original,             # the original data as pd.DataFrame\n            'tabular_model_configuration': { # tabular model configuration (optional)\n                'max_training_time': 2,      # cap runtime for demo; set None for max accuracy\n                # model, max_epochs,,..      # further model configurations (optional)\n                'differential_privacy': {    # differential privacy configuration (optional)\n                    'max_epsilon': 5.0,      # - max epsilon value, used as stopping criterion\n                    'delta': 1e-5,           # - delta value\n                }\n            },\n            # columns, keys, compute,..      # further table configurations (optional)\n        }]\n    },\n    start=True,                              # start training immediately (default: True)\n    wait=True,                               # wait for completion (default: True)\n)\ng\n</code></pre> <p>Probe the generator for 100 new synthetic samples. <pre><code>df_samples = mostly.probe(g, size=100)\ndf_samples\n</code></pre></p> <p>Probe the generator for a 28-year old male Cuban and a 44-year old female Mexican. <pre><code>df_samples = mostly.probe(g, seed=pd.DataFrame({\n    'age': [28, 44],\n    'sex': ['Male', 'Female'],\n    'native_country': ['Cuba', 'Mexico'],\n}))\ndf_samples\n</code></pre></p> <p>Create a new Synthetic Dataset via a batch job to conditionally generate 1'000'000 statistically representative synthetic samples.</p> <pre><code>sd = mostly.generate(g, size=1_000_000)\ndf_synthetic = sd.data()\ndf_synthetic\n</code></pre>"},{"location":"usage/#time-series-data","title":"Time-series data","text":"<p>Train a two-table generator on a time-series dataset with a parent-child relationship.</p> <pre><code>import pandas as pd\nfrom mostlyai.sdk import MostlyAI\n\n# load original time series data\nrepo_url = 'https://github.com/mostly-ai/public-demo-data/raw/refs/heads/dev/cdnow/'\ndf_original_purchases = pd.read_csv(f'{repo_url}/purchases.csv.gz')[['users_id', 'date', 'cds', 'amt']]\n\n# ensure correct data type for DATE column\ndf_original_purchases['date'] = pd.to_datetime(df_original_purchases['date'])\n\n# extract subject table from time-series data\ndf_original_users = df_original_purchases[['users_id']].drop_duplicates()\n\n# instantiate SDK\nmostly = MostlyAI()\n\n# train a generator\ng = mostly.train(config={\n    'name': 'CDNOW',                      # name of the generator\n    'tables': [{                          # provide list of table(s)\n        'name': 'users',                  # name of the table\n        'data': df_original_users,        # the original data as pd.DataFrame\n        'primary_key': 'users_id',\n    }, {\n        'name': 'purchases',              # name of the table\n        'data': df_original_purchases,    # the original data as pd.DataFrame\n        'foreign_keys': [                 # foreign key configurations\n            {'column': 'users_id', 'referenced_table': 'users', 'is_context': True},\n        ],\n        'tabular_model_configuration': {\n            'max_training_time': 2,       # cap runtime for demo; set None for max accuracy\n        },\n    }],\n})\n\n# show Model QA reports\ng.reports(display=True)\n</code></pre> <p>Generate a new dataset of 1k synthetic users and their synthetic purchases. <pre><code>syn = mostly.probe(g, size=1000)\nsyn['purchases'].sort_values(['users_id', 'date'])\n</code></pre></p> <p>Conditionally generate 100 synthetic simulations for a specific customer profile with their first 2 purchases.</p> <p>Note: For multi-table seeds, you must provide unique PK/FK values to match records between the seed tables.</p> <pre><code># define seed for 100 simulations for a specific user and her first 2 purchases\nuser_ids = [f\"sim-{i:03d}\" for i in range(100)]\nseed_users = pd.DataFrame({\n    'users_id': user_ids,\n})\nseed_purchases = pd.DataFrame({\n    'users_id': [uid for uid in user_ids for _ in range(2)],\n    'date': pd.to_datetime(['1997-01-12', '1997-01-12'] * 100),\n    'cds': [1, 5] * 100,\n    'amt': [12.00, 77.00] * 100,\n})\nsyn = mostly.probe(g, seed={\n    'users': seed_users,\n    'purchases': seed_purchases,\n})\nsyn['purchases'] = syn['purchases'].sort_values(['users_id', 'date'])\nsyn\n</code></pre>"},{"location":"usage/#multi-table-tabular-data","title":"Multi-table tabular data","text":"<p>Train a 3-table tabular generator on baseball players and their seasonal statistics.</p> <pre><code>import pandas as pd\nfrom mostlyai.sdk import MostlyAI\n\n# load original data\nrepo_url = 'https://github.com/mostly-ai/public-demo-data/raw/dev/baseball'\ndf_original_players = pd.read_csv(f'{repo_url}/players.csv.gz')[['id', 'country', 'weight', 'height']]\ndf_original_batting = pd.read_csv(f'{repo_url}/batting.csv.gz')[['players_id', 'G', 'AB', 'R', 'H', 'HR']]\ndf_original_fielding = pd.read_csv(f'{repo_url}/fielding.csv.gz')[['players_id', 'POS', 'G', 'PO', 'A', 'E', 'DP']]\n\n# instantiate SDK\nmostly = MostlyAI()\n\n# train a generator\ng = mostly.train(config={\n    'name': 'Baseball',                   # name of the generator\n    'tables': [{                          # provide list of table(s)\n        'name': 'players',                # name of the table\n        'data': df_original_players,      # the original data as pd.DataFrame\n        'primary_key': 'id',\n        'tabular_model_configuration': {\n            'max_training_time': 2,       # cap runtime for demo; set None for max accuracy\n        },\n    }, {\n        'name': 'batting',                # name of the table\n        'data': df_original_batting,      # the original data as pd.DataFrame\n        'foreign_keys': [                 # foreign key configurations\n            {'column': 'players_id', 'referenced_table': 'players', 'is_context': True},\n        ],\n        'tabular_model_configuration': {\n            'max_training_time': 2,       # cap runtime for demo; set None for max accuracy\n        },\n    }, {\n        'name': 'fielding',               # name of the table\n        'data': df_original_fielding,     # the original data as pd.DataFrame\n        'foreign_keys': [                 # foreign key configurations\n            {'column': 'players_id', 'referenced_table': 'players', 'is_context': True},\n        ],\n        'tabular_model_configuration': {\n            'max_training_time': 2,       # cap runtime for demo; set None for max accuracy\n        },\n    }],\n})\n\n# show Model QA reports\ng.reports(display=True)\n</code></pre> <p>Generate a new dataset of 10k synthetic players and their synthetic season stats. <pre><code>sd = mostly.generate(g, size=10_000)\nsyn = sd.data()\ndisplay(syn['players'].sort_values('id'))\ndisplay(syn['batting'].sort_values('players_id'))\ndisplay(syn['fielding'].sort_values('players_id'))\n</code></pre></p>"},{"location":"usage/#multi-table-relational-data-with-non-context-foreign-keys","title":"Multi-table relational data with non-context foreign keys","text":"<p>Train a 3-table relational generator on the BERKA dataset with both context and non-context foreign keys.</p> <p>Understanding Foreign Key Types:</p> <ul> <li> <p>Context FK (<code>is_context: True</code>): Child records that belong to the same parent are learned and generated together with the context of the parent. This preserves patterns between child and parent (and grand-parent) as well as between siblings belonging to the same parent.</p> </li> <li> <p>Non-Context FK (<code>is_context: False</code>): A dedicated model is trained to learn matching a child record with a suitable parent record. This preserves patterns between child and parent, but not between siblings belonging to the same parent.</p> </li> </ul> <p>Subject Tables: Tables that do not have a context foreign key are considered subject tables. In the BERKA example below, <code>clients</code> and <code>accounts</code> are subject tables, while <code>disp</code> is a child table with a context FK to <code>clients</code>.</p> <pre><code>import pandas as pd\nfrom mostlyai.sdk import MostlyAI\n\n# load original data from BERKA dataset\nrepo_url = 'https://github.com/mostly-ai/public-demo-data/raw/refs/heads/dev/berka/data'\naccounts_df = pd.read_csv(f'{repo_url}/account.csv.gz')\ndisp_df = pd.read_csv(f'{repo_url}/disp.csv.gz')\nclients_df = pd.read_csv(f'{repo_url}/client.csv.gz')\n\n# instantiate SDK\nmostly = MostlyAI()\n\n# train a generator\ng = mostly.train(config={\n    'name': 'BERKA',                      # name of the generator\n    'tables': [{                          # provide list of table(s)\n        'name': 'clients',                # name of the table\n        'data': clients_df,               # the original data as pd.DataFrame\n        'primary_key': 'client_id',       # define PK column\n        'tabular_model_configuration': {\n            'max_training_time': 2,       # cap runtime for demo; set None for max accuracy\n        },\n    }, {\n        'name': 'accounts',               # name of the table\n        'data': accounts_df,              # the original data as pd.DataFrame\n        'primary_key': 'account_id',      # define PK column\n        'tabular_model_configuration': {\n            'max_training_time': 2,       # cap runtime for demo; set None for max accuracy\n        },\n    }, {\n        'name': 'disp',                   # name of the table\n        'data': disp_df,                  # the original data as pd.DataFrame\n        'primary_key': 'disp_id',         # define PK column\n        'foreign_keys': [{                # define FK columns: max 1 Context FK allowed\n            'column': 'client_id',\n            'referenced_table': 'clients',\n            'is_context': True            # Context FK\n        }, {\n            'column': 'account_id',\n            'referenced_table': 'accounts',\n            'is_context': False           # Non-Context FK\n        }],\n        'tabular_model_configuration': {\n            'max_training_time': 2,       # cap runtime for demo; set None for max accuracy\n        },\n    }],\n})\n\n# show Model QA reports\ng.reports(display=True)\n</code></pre> <p>Generate a new dataset with 1000 synthetic clients and 800 synthetic accounts, along with their related dispositions. <pre><code>sd = mostly.generate(g, size={'clients': 1_000, 'accounts': 800})\nsyn = sd.data()\ndisplay(syn['clients'].sort_values('client_id'))\ndisplay(syn['accounts'].sort_values('account_id'))\ndisplay(syn['disp'].sort_values('disp_id'))\n</code></pre></p>"},{"location":"usage/#tabular-and-textual-data","title":"Tabular and textual data","text":"<p>Train a multi-model generator on a single flat table, that consists both of tabular and of textual columns.</p> <p>Note, that the usage of a GPU, with 24GB or more, is strongly recommended for training language models.</p> <pre><code>import pandas as pd\nfrom mostlyai.sdk import MostlyAI\n\n# load original data with news headlines\nrepo_url = 'https://github.com/mostly-ai/public-demo-data'\ntrn_df = pd.read_parquet(f'{repo_url}/raw/refs/heads/dev/headlines/headlines.parquet')\n\n# instantiate SDK\nmostly = MostlyAI()\n\n# print out available LANGUAGE models\nprint(mostly.models()[\"LANGUAGE\"])\n\n# train a generator; increase max_training_time to improve quality\ng = mostly.train(config={\n    'name': 'Headlines',                   # name of the generator\n    'tables': [{                           # provide list of table(s)\n        'name': 'headlines',               # name of the table\n        'data': trn_df,                    # the original data as pd.DataFrame\n        'columns': [                       # configure TABULAR + LANGUAGE cols\n            {'name': 'category', 'model_encoding_type': 'TABULAR_CATEGORICAL'},\n            {'name': 'date', 'model_encoding_type': 'TABULAR_DATETIME'},\n            {'name': 'headline', 'model_encoding_type': 'LANGUAGE_TEXT'},\n        ],\n        'tabular_model_configuration': {             # tabular model configuration (optional)\n            'max_training_time': 5,                  # cap runtime for demo; set None for max accuracy\n        },\n        'language_model_configuration': {             # language model configuration (optional)\n            'max_training_time': 5,                   # cap runtime for demo; set None for max accuracy\n            'model': 'MOSTLY_AI/LSTMFromScratch-3m',  # use a light-weight LSTM model, trained from scratch (GPU recommended)\n            #'model': 'microsoft/phi-1.5',            # alternatively use a pre-trained HF-hosted LLM model (GPU required)\n        }\n    }],\n})\n</code></pre> <p>Conditionally generate 100 new headlines for the WELLNESS category.</p> <pre><code>df_seed = pd.DataFrame({'category': ['WELLNESS'] * 100})\nsd = mostly.generate(g, seed=df_seed)\ndf_synthetic = sd.data()\n</code></pre>"},{"location":"usage/#usage-of-connectors","title":"Usage of connectors","text":"<p>Leverage connectors for fetching original data as well as for delivering synthetic datasets.</p> <p>See ConnectorConfig for the full list of available connectors, and their corresponding configuration parameters.</p> <pre><code>import pandas as pd\nfrom mostlyai.sdk import MostlyAI\n\n# instantiate SDK\nmostly = MostlyAI()\n\n# define a source connector for reading\nsrc_c = mostly.connect(config={\n    \"name\": \"My S3 Source Storage\",\n    \"type\": \"POSTGRES\",\n    \"access_type\": \"SOURCE\",\n    \"config\": {\n        \"host\": \"INSERT_YOUR_DB_HOST\",\n        \"username\": \"INSERT_YOUR_DB_USER\",\n        \"database\": \"INSERT_YOUR_DB_NAME\",\n    },\n    \"secrets\": {\n        \"password\": \"INSERT_YOUR_DB_PWD\",\n    }\n})\n\n# define a destination connector for writing\ndest_c = mostly.connect(config={\n    \"name\": \"My S3 Destination Storage\",\n    \"type\": \"S3_STORAGE\",\n    \"access_type\": \"DESTINATION\",\n    \"config\": {\n        \"access_key\": \"INSERT_YOUR_ACCESS_KEY\",\n    },\n    \"secrets\": {\n        \"secret_key\": \"INSERT_YOUR_SECRET_KEY\",\n    },\n})\n\n# list available source locations\nsrc_c.locations()\n</code></pre> <p>Train a generator on a dataset fetched from the source connector.</p> <pre><code># train a generator; increase max_training_time to improve quality\ng = mostly.train(config={\n    'name': 'Housing',                      # name of the generator\n    'tables': [{                            # provide list of table(s)\n        'name': 'housing',                  # name of the table\n        'source_connector_id': src_c.id,    # the ID of the source connector\n        'location': 'bucket/path_to_data',  # the location of the source data\n        'tabular_model_configuration': {    # tabular model configuration (optional)\n            'max_epochs': 20,               # cap runtime for demo; set None for max accuracy\n        },\n    }],\n}, start=True, wait=True)\n</code></pre> <p>Generate a synthetic dataset, and deliver it to a destination connector.</p> <pre><code>sd = mostly.generate(g, config={\n    \"name\": \"Housing\",                             # name of the synthetic dataset\n    \"delivery\": {                                  # delivery configuration (optional)\n        \"destination_connector_id\": dest_c.id,     # the ID of the destination connector\n        \"location\": \"bucket/path_to_destination\",  # the location of the destination data\n        \"overwrite_tables\": True,                   # overwrite existing tables (default: False)\n    }\n})\n</code></pre>"},{"location":"usage/#usage-of-datasets-client-mode-only","title":"Usage of datasets (CLIENT mode only)","text":"<p>Create datasets to train generators or generate artifacts via the MOSTLY AI Assistant.</p> <p>Example 1: Create a dataset with a connector</p> <pre><code>from mostlyai.sdk import MostlyAI\nmostly = MostlyAI()\nds = mostly.datasets.create(\n    config={\n        \"name\": \"My Database\",\n        \"description\": \"Some instructions...\",\n        \"connectors\": [\n            {\n                \"id\": \"e43aa845-8d77-4cda-bc9e-10da9a4196a9\"  # the UUID of the source connector\n            }\n        ]\n    }\n)\n</code></pre> <p>Example 2: Create a dataset with files</p> <pre><code>from mostlyai.sdk import MostlyAI\nmostly = MostlyAI()\nds = mostly.datasets.create(\n    config={\n        \"name\": \"My Dataset\",\n        \"description\": \"Some instructions...\",\n    }\n)\nds.upload_file(\"path/to/file_1.csv.gz\")\nds.upload_file(\"path/to/file_2.txt\")\n</code></pre>"}]}